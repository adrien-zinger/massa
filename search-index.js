var searchIndex = JSON.parse('{\
"massa_api":{"doc":"Massa JSON-RPC API","t":[3,8,3,3,8,3,10,12,12,10,11,11,11,11,11,11,11,11,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,10,10,10,10,10,10,10,10,11,11,11,11,11,11,11,11,12,12,12,11,11,12,10,12,10,10,10,11,11,11,10,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,12,11,11,11,11],"n":["API","Endpoints","Private","Public","RpcServer","StopHandle","add_staking_private_keys","api_settings","api_settings","ban","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","compensation_millis","consensus_command_sender","consensus_command_sender","consensus_config","consensus_config","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","from","from","from","from","get_addresses","get_block","get_cliques","get_endorsements","get_graph_interval","get_operations","get_stakers","get_staking_addresses","get_status","init","init","init","init","into","into","into","into","network_command_sender","network_command_sender","network_settings","new","new","node_id","node_sign_message","pool_command_sender","remove_staking_addresses","send_operations","serve","serve","serve","stop","stop_node","stop_node_channel","to_delegate","to_delegate","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","unban","version","vzip","vzip","vzip","vzip"],"q":["massa_api","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","Add a vec of new private keys for the node to use to stake.","","","Bans given IP address. No confirmation to expect.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get addresses.","Get information on a block given its hash.","Get cliques.","Get endorsements (not yet implemented).","Get the block graph within the specified time interval. …","Returns operations information associated to a given list …","Returns the active stakers and their active roll counts …","Return hashset of staking addresses.","Summary of the current state: time, last final blocks …","","","","","","","","","","","","","","","Sign message with node’s key. Returns the public key …","","Remove a vec of addresses used to stake. No confirmation …","Adds operations to pool. Returns operations that were ok …","","","","","Gracefully stop the node.","","Create an <code>IoDelegate</code>, wiring rpc calls to the trait …","Create an <code>IoDelegate</code>, wiring rpc calls to the trait …","","","","","","","","","","","","","Unbans given IP address. No confirmation to expect.","","","","",""],"i":[0,0,0,0,0,0,1,2,3,1,2,3,4,5,2,3,4,5,2,2,3,2,3,2,3,4,5,2,3,4,5,2,3,4,5,2,3,4,5,1,1,1,1,1,1,1,1,1,2,3,4,5,2,3,4,5,2,3,2,4,4,2,1,2,1,1,6,4,4,5,1,3,1,1,2,3,4,5,2,3,4,5,2,3,4,5,1,2,2,3,4,5],"f":[null,null,null,null,null,null,[[["vec",3,[["privatekey",3]]]],["boxfuture",6,[["result",4,[["apierror",4]]]]]],null,null,[[["vec",3,[["ipaddr",4]]]],["boxfuture",6,[["result",4,[["apierror",4]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[["vec",3,[["address",3]]]],["boxfuture",6,[["result",4,[["vec",3,[["addressinfo",3]]],["apierror",4]]]]]],[[["blockid",3]],["boxfuture",6,[["result",4,[["blockinfo",3],["apierror",4]]]]]],[[],["boxfuture",6,[["result",4,[["vec",3,[["clique",3]]],["apierror",4]]]]]],[[["vec",3,[["endorsementid",3]]]],["boxfuture",6,[["result",4,[["vec",3,[["endorsementinfo",3]]],["apierror",4]]]]]],[[["timeinterval",3]],["boxfuture",6,[["result",4,[["vec",3,[["blocksummary",3]]],["apierror",4]]]]]],[[["vec",3,[["operationid",3]]]],["boxfuture",6,[["result",4,[["vec",3,[["operationinfo",3]]],["apierror",4]]]]]],[[],["boxfuture",6,[["result",4,[["addresshashmap",6,[["u64",15]]],["apierror",4]]]]]],[[],["boxfuture",6,[["result",4,[["addresshashset",6],["apierror",4]]]]]],[[],["boxfuture",6,[["result",4,[["nodestatus",3],["apierror",4]]]]]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[]],[[]],null,null,null,[[["consensuscommandsender",3],["apisettings",3],["consensusconfig",3],["poolcommandsender",3],["networksettings",3],["version",3],["networkcommandsender",3],["i64",15],["nodeid",3]]],[[["consensuscommandsender",3],["networkcommandsender",3],["apisettings",3],["consensusconfig",3]]],null,[[["vec",3,[["u8",15]]]],["boxfuture",6,[["result",4,[["pubkeysig",3],["apierror",4]]]]]],null,[[["vec",3,[["address",3]]]],["boxfuture",6,[["result",4,[["apierror",4]]]]]],[[["vec",3,[["operation",3]]]],["boxfuture",6,[["result",4,[["vec",3,[["operationid",3]]],["apierror",4]]]]]],[[["socketaddr",4]],["stophandle",3]],[[["socketaddr",4]],["stophandle",3]],[[["socketaddr",4]],["stophandle",3]],[[]],[[],["boxfuture",6,[["result",4,[["apierror",4]]]]]],null,[[],["iodelegate",3,[["metadata",8]]]],[[],["iodelegate",3,[["metadata",8]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[["vec",3,[["ipaddr",4]]]],["boxfuture",6,[["result",4,[["apierror",4]]]]]],null,[[]],[[]],[[]],[[]]],"p":[[8,"Endpoints"],[3,"Public"],[3,"Private"],[3,"API"],[3,"StopHandle"],[8,"RpcServer"]]},\
"massa_bootstrap":{"doc":"","t":[3,11,11,11,11,11,0,11,5,11,11,0,5,11,11,11,11,11,6,3,3,3,6,6,6,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,17,3,17,17,17,17,17,17,17,17,12,12,11,11,12,11,11,12,11,11,11,11,12,11,11,11,11,12,12,12,12,12,12,11,11,11,11,11,12],"n":["BootstrapManager","borrow","borrow_mut","deref","deref_mut","drop","establisher","from","get_state","init","into","settings","start_bootstrap_server","stop","try_from","try_into","type_id","vzip","Connector","DefaultConnector","DefaultEstablisher","DefaultListener","Duplex","Establisher","Listener","accept","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","connect","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","fmt","fmt","fmt","from","from","from","get_connector","get_listener","init","init","init","into","into","into","new","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","BOOTSTRAP_RANDOMNESS_SIZE_BYTES","BootstrapSettings","IP_LIST_MAX_SIZE","MAX_BOOTSTRAP_BLOCKS","MAX_BOOTSTRAP_CHILDREN","MAX_BOOTSTRAP_CLIQUES","MAX_BOOTSTRAP_DEPS","MAX_BOOTSTRAP_MESSAGE_SIZE","MAX_BOOTSTRAP_POS_CYCLES","MAX_BOOTSTRAP_POS_ENTRIES","bind","bootstrap_list","borrow","borrow_mut","cache_duration","clone","clone_into","connect_timeout","deref","deref_mut","deserialize","drop","enable_clock_synchronization","fmt","from","init","into","ip_list_max_size","max_ping","max_simultaneous_bootstraps","per_ip_min_interval","read_timeout","retry_delay","to_owned","try_from","try_into","type_id","vzip","write_timeout"],"q":["massa_bootstrap","","","","","","","","","","","","","","","","","","massa_bootstrap::establisher","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","massa_bootstrap::settings","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","","Gets the state from a bootstrap server needs to be …","","","","","","","","","","","Initiates a connection with given timeout in millis","Establishes a connection","The listener we are using","","","","Accepts a new incoming connection from this listener.","","","","","","","Tries to connect to address","","","","","","","","","","","","","","","","","Get the connector with associated timeout","Gets the associated listener","","","","","","","Creates an Establisher.","","","","","","","","","","","","","","","Max size of the IP list","Max number of blocks we provide/ take into account while …","","","","Max message size for bootstrap","Max number of cycles in PoS bootstrap","Max number of address and rng entries for PoS bootstrap","Port to listen if we choose to allow other nodes to use us …","Ip address of our bootstrap nodes and their public key.","","","Cache duration","","","connection timeout","","","","","Enable clock synchronization","","","","","Max size of the IP list","Max ping delay.","Max simultaneous bootstraps","Minimum interval between two bootstrap attempts from a …","readout timeout","Time we wait before retrying a bootstrap","","","","","","write timeout"],"i":[0,1,1,1,1,1,0,1,0,1,1,0,0,1,1,1,1,1,0,0,0,0,0,0,0,2,2,3,4,2,3,4,3,4,2,3,4,2,3,4,2,3,4,2,3,4,2,3,4,4,4,2,3,4,2,3,4,4,2,3,4,2,3,4,2,3,4,2,3,4,0,0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5],"f":[null,[[]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],null,[[]],[[["bootstrapsettings",3],["establisher",6],["version",3],["massatime",3],["option",4,[["massatime",3]]]]],[[],["usize",15]],[[]],null,[[["consensuscommandsender",3],["networkcommandsender",3],["bootstrapsettings",3],["establisher",6],["privatekey",3],["i64",15],["version",3]]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["socketaddr",4]]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[["massatime",3]]],[[["socketaddr",4]]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],null,[[],["bootstrapsettings",3]],[[]],null,[[["usize",15]]],[[["usize",15]]],[[],["result",4]],[[["usize",15]]],null,[[["formatter",3]],["result",6]],[[]],[[],["usize",15]],[[]],null,null,null,null,null,null,[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null],"p":[[3,"BootstrapManager"],[3,"DefaultListener"],[3,"DefaultConnector"],[3,"DefaultEstablisher"],[3,"BootstrapSettings"]]},\
"massa_client":{"doc":"","t":[3,3,11,11,11,11,11,0,12,11,12,11,11,11,11,11,12,12,5,12,11,12,12,0,0,11,0,11,11,11,11,11,11,0,11,11,12,12,4,3,3,3,12,12,13,11,11,11,11,11,11,11,11,13,11,11,11,11,11,13,11,11,11,11,11,11,11,11,11,11,13,13,11,13,11,13,11,13,11,5,11,13,12,11,11,11,11,11,11,11,12,11,11,11,13,13,13,13,13,11,5,11,12,12,14,11,13,5,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,11,11,11,11,13,13,13,13,13,3,3,8,11,11,11,11,11,11,11,11,11,12,11,11,14,12,12,10,11,5,11,11,11,11,11,11,11,11,11,11,12,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,3,3,3,12,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,12,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5],"n":["Args","JsonError","borrow","borrow","borrow_mut","borrow_mut","clap","cmds","command","erased_serialize","error","from","from","from_clap","into","into","ip","json","main","parameters","parse_args","private_port","public_port","repl","rpc","serialize","settings","try_from","try_from","try_into","try_into","type_id","type_id","utils","vzip","vzip","wallet","0","Command","CommandIter","ExtendedWallet","ExtendedWalletEntry","address_info","back_idx","ban","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","buy_rolls","clone","clone_into","eq","erased_serialize","erased_serialize","exit","fmt","fmt","fmt","fmt","from","from","from","from","from_str","get","get_addresses","get_block","get_detailed_message","get_endorsements","get_message","get_operations","get_serializations","get_status","get_str","help","help","help","idx","into","into","into","into","into_iter","iter","len","marker","new","next","next_back","node_add_staking_private_keys","node_get_staking_addresses","node_remove_staking_addresses","node_stop","node_testnet_rewards_program_ownership_proof","nth","parse_vec","pretty_print","private_key","public_key","rpc_error","run","sell_rolls","send_operation","send_transaction","serialize","serialize","size_hint","to_owned","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","unban","vzip","vzip","vzip","vzip","wallet_add_private_keys","wallet_generate_private_key","wallet_info","wallet_remove_addresses","when_episode_ends","CommandCompletion","CommandHistory","Output","borrow","borrow","borrow_mut","borrow_mut","default","default","from","from","get","history","into","into","massa_fancy_ascii_art_logo","max","options","pretty_print","read","run","stdout_json","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","write","0","Client","RpcClient","_get_cliques","_get_graph_interval","_get_stakers","add_staking_private_keys","ban","borrow","borrow","borrow_mut","borrow_mut","from","from","from","from_url","get_addresses","get_block","get_endorsements","get_operations","get_staking_addresses","get_status","into","into","new","node_sign_message","private","public","remove_staking_addresses","send_operations","stop_node","try_from","try_from","try_into","try_into","type_id","type_id","unban","vzip","vzip","DefaultNode","SETTINGS","Settings","__private_field","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","default_node","deref","deserialize","deserialize","fmt","fmt","from","from","from","history","into","into","into","ip","private_port","public_port","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","longest_common_prefix"],"q":["massa_client","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","massa_client::cmds","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","massa_client::repl","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","massa_client::rpc","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","massa_client::settings","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","massa_client::utils"],"d":["","","","","","","","","Command that client would execute (non-interactive mode)","","","","","","","","Address to listen on.","Enable a mode where input/output are serialized as JSON","","Optional command parameter (as a JSON parsable string)","","Port to listen on (Massa private API).","Port to listen on (Massa public API).","","","","","","","","","","","Utilities","","","Path of wallet file.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Simple completion implementation based on substring","","","","","","","","","","","","","","","","","","","","","","","","Get the block graph within the specified time interval. …","Returns the active stakers and their roll counts for the …","Add a vec of new private keys for the node to use to stake.","Bans given node id No confirmation to expect.","","","","","","","","Default constructor","","Get information on a block given its BlockId","","Returns operations information associated to a given list …","Return hashset of staking addresses.","summary of the current state: time, last final blocks …","","","","Sign message with node’s key. Returns the public key …","","","Remove a vec of addresses used to stake. No confirmation …","Adds operations to pool. Returns operations that were ok …","Gracefully stop the node.","","","","","","","Unbans given ip addr No confirmation to expect.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Longest Common Prefix"],"i":[0,0,1,2,1,2,1,0,1,2,2,1,2,1,1,2,1,1,0,1,1,1,1,0,0,2,0,1,2,1,2,1,2,0,1,2,1,3,0,0,0,0,4,5,6,6,5,4,3,6,5,4,3,6,5,5,6,4,3,6,6,6,4,3,6,5,4,3,6,5,6,6,6,6,6,6,6,6,6,0,6,6,5,6,5,4,3,5,6,5,5,3,5,5,6,6,6,6,6,5,0,3,4,4,0,6,6,0,6,4,3,5,5,6,4,3,6,5,4,3,6,5,4,3,6,5,4,3,6,6,5,4,3,6,6,6,6,6,0,0,0,7,8,7,8,7,8,7,8,8,7,7,8,0,7,8,9,7,0,9,7,8,7,8,7,8,7,8,7,10,0,0,10,10,10,10,10,11,10,11,10,11,10,10,10,10,10,10,10,10,10,11,10,11,10,11,11,10,10,10,11,10,11,10,11,10,10,11,10,0,0,0,12,12,13,14,12,13,14,13,14,13,14,13,12,13,14,13,14,12,13,14,13,12,13,14,14,14,14,13,14,12,13,14,12,13,14,12,13,14,12,13,14,0],"f":[null,null,[[]],[[]],[[]],[[]],[[],["app",3]],null,null,[[["serializer",8]],["result",4,[["ok",3],["error",3]]]],null,[[]],[[]],[[["argmatches",3]]],[[]],[[]],null,null,[[],["result",6]],null,[[],["result",4]],null,null,null,null,[[],["result",4]],null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],null,[[]],[[]],null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[],["commanditer",3]],[[]],[[["command",4]],["bool",15]],[[["serializer",8]],["result",4,[["ok",3],["error",3]]]],[[["serializer",8]],["result",4,[["ok",3],["error",3]]]],null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[["str",15]],["result",4,[["command",4]]]],[[["usize",15]],["option",4,[["command",4]]]],null,null,[[],["option",4,[["str",15]]]],null,[[],["option",4,[["str",15]]]],null,[[]],null,[[["str",15]],["option",4,[["str",15]]]],[[]],[[]],null,null,[[]],[[]],[[]],[[]],[[]],[[],["commanditer",3]],[[],["usize",15]],null,[[["wallet",3]],["result",6]],[[],["option",4]],[[],["option",4]],null,null,null,null,null,[[["usize",15]],["option",4]],[[],["result",6,[["vec",3,[["fromstr",8]]]]]],[[]],null,null,null,[[["client",3],["wallet",3],["bool",15]]],null,[[["client",3],["wallet",3],["operationtype",4],["amount",3],["address",3],["bool",15]]],null,[[],["result",4]],[[],["result",4]],[[]],[[]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["str",15]],["option",4,[["string",3]]]],null,[[]],[[]],null,null,null,[[]],[[["usize",15]],["option",4,[["string",3]]]],[[["client",3],["wallet",3]]],[[],["result",6]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],null,null,null,[[]],[[["timeinterval",3]]],[[]],[[["vec",3,[["privatekey",3]]]]],[[["vec",3,[["ipaddr",4]]]]],[[]],[[]],[[]],[[]],[[]],[[["rpcchannel",3]]],[[]],[[["str",15]]],[[["vec",3,[["address",3]]]]],[[["blockid",3]]],[[["vec",3,[["endorsementid",3]]]]],[[["vec",3,[["operationid",3]]]]],[[]],[[]],[[]],[[]],[[["ipaddr",4],["u16",15],["u16",15]]],[[["vec",3,[["u8",15]]]]],null,null,[[["vec",3,[["address",3]]]]],[[["vec",3,[["operation",3]]]]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[["vec",3,[["ipaddr",4]]]]],[[]],[[]],null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[],["settings",3]],[[],["defaultnode",3]],[[]],[[]],null,[[],["settings",3]],[[],["result",4]],[[],["result",4]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],null,[[]],[[]],[[]],null,null,null,[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[["vec",3,[["str",15]]]],["str",15]]],"p":[[3,"Args"],[3,"JsonError"],[3,"ExtendedWallet"],[3,"ExtendedWalletEntry"],[3,"CommandIter"],[4,"Command"],[3,"CommandHistory"],[3,"CommandCompletion"],[8,"Output"],[3,"RpcClient"],[3,"Client"],[3,"SETTINGS"],[3,"Settings"],[3,"DefaultNode"]]},\
"massa_consensus":{"doc":"Staking","tn":["0","0","0","0","Active","Active","BlockGraphExport","BootstrapableGraph","ConsensusCommand","ConsensusCommandSender","ConsensusEvent","ConsensusEventReceiver","ConsensusManager","DiscardReason","Discarded","ExportActiveBlock","ExportBlockStatus","ExportCompiledBlock","ExportProofOfStake","Final","Final","Final","GetActiveBlock","GetActiveStakers","GetAddressesInfo","GetBlockGraphStatus","GetBlockIdsByCreator","GetBlockStatus","GetBootstrapState","GetCliques","GetEndorsementsByAddress","GetEndorsementsById","GetOperations","GetRecentOperations","GetSelectionDraws","GetStakersProductionStats","GetStakingAddressses","GetStats","Incoming","Invalid","LedgerDataExport","NeedSync","RegisterStakingPrivateKeys","RemoveStakingAddresses","RollCounts","RollUpdate","RollUpdates","Stale","Status","ThreadCycleState","WaitingForDependencies","WaitingForSlot","active_blocks","active_blocks","apply","apply_updates","best_parents","best_parents","block","block_ledger_changes","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","candidate_data","chain","children","children","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_subset","clone_subset","compensate","cycle","cycle_states","cycle_updates","default","default","default","dependencies","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","discarded_blocks","drain","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","eq","eq","error","extract_from","final_data","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bytes_compact","from_bytes_compact","from_bytes_compact","from_bytes_compact","from_bytes_compact","genesis_blocks","get_active_block","get_active_stakers","get_addresses_info","get_block_graph_status","get_block_ids_by_creator","get_block_status","get_bootstrap_state","get_cliques","get_endorsements_by_address","get_endorsements_by_id","get_involved_addresses","get_operations","get_operations_involving_address","get_selection_draws","get_stakers_production_stats","get_staking_addresses","get_stats","gi_head","gi_head","header","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","is_empty","is_final","is_final","is_nil","last_final_slot","latest_final_blocks_periods","latest_final_blocks_periods","ledger","ledger","len","max_cliques","max_cliques","ne","new","parents","production_events","production_stats","register_staking_private_keys","remove_staking_addresses","rng_seed","roll_count","roll_purchases","roll_sales","roll_updates","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","settings","start_consensus_controller","stop","sync_from","sync_from","to_bytes_compact","to_bytes_compact","to_bytes_compact","to_bytes_compact","to_bytes_compact","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","wait_event","0","0","0","0","0","0","0","address","address","address","addresses","addrs","block_id","block_id","end","endorsements","operation_ids","response_tx","response_tx","response_tx","response_tx","response_tx","response_tx","response_tx","response_tx","response_tx","response_tx","response_tx","slot_end","slot_start","start","0","0","0","0","AmountOverflowError","BlockCreationError","ChannelError","ConfigError","ConsensusError","ContainerInconsistency","ControllerEventError","FitnessOverflow","GenesisCreationError","HashConversionError","IOError","InternalError","InvalidBlock","InvalidLedgerChange","InvalidRollUpdate","JoinError","KeyError","LedgerInconsistency","MassaHashError","MissingBlock","ModelsError","NotFinalRollError","OneshotReceiveError","PoolError","PosCycleUnavailable","ProtocolError","ReadError","ReceiveChannelError","RollOverflowError","SendChannelError","SerdeError","SledError","SledTransactionError","SlotOverflowError","SmallSeedError","ThreadOverflowError","TimeError","TimeOverflowError","TokioSendError","TransactionError","TryFromSliceError","WeightedDistributionError","borrow","borrow","borrow_mut","borrow_mut","deref","deref","deref_mut","deref_mut","drop","drop","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","init","init","into","into","source","to_string","to_string","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","Ledger","LedgerChanges","LedgerSubset","OperationLedgerInterface","add_reward","apply","apply_change","apply_changes","apply_final_changes","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","chain","chain","clear","clone","clone","clone_into","clone_into","clone_subset","clone_subset","contains","default","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","deserialize","drop","drop","drop","fmt","fmt","from","from","from","from_bytes_compact","from_export","get_data","get_final_balance","get_final_data","get_final_ledger_subset","get_involved_addresses","get_involved_addresses","get_latest_final_periods","get_ledger_changes","init","init","init","into","into","into","new","read_whole","serialize","serialize","sync_from","sync_from","to_bytes_compact","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","BLOCK_REWARD","CHANNEL_SIZE","ConsensusConfig","ConsensusSettings","DELTA_F0","ENDORSEMENT_COUNT","END_TIMESTAMP","GENESIS_KEY","GENESIS_TIMESTAMP","INITIAL_DRAW_SEED","MAX_BLOCK_SIZE","MAX_OPERATIONS_PER_BLOCK","OPERATION_VALIDITY_PERIODS","PERIODS_PER_CYCLE","POS_LOCK_CYCLES","POS_LOOKBACK_CYCLES","POS_MISS_RATE_DEACTIVATION_THRESHOLD","ROLL_PRICE","T0","THREAD_COUNT","block_db_prune_interval","block_db_prune_interval","block_reward","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","compact_config","config","delta_f0","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","disable_block_creation","disable_block_creation","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","end_timestamp","endorsement_count","fmt","fmt","force_keep_final_periods","force_keep_final_periods","from","from","from","from","from","from","from","from","from","from","future_block_processing_max_periods","future_block_processing_max_periods","genesis_key","genesis_timestamp","init","init","init","init","init","init","init","init","init","init","initial_draw_seed","initial_ledger_path","initial_ledger_path","initial_rolls_path","initial_rolls_path","into","into","into","into","into","into","into","into","into","into","ledger_cache_capacity","ledger_cache_capacity","ledger_flush_interval","ledger_flush_interval","ledger_path","ledger_path","ledger_reset_at_startup","ledger_reset_at_startup","max_block_size","max_dependency_blocks","max_dependency_blocks","max_discarded_blocks","max_discarded_blocks","max_future_processing_blocks","max_future_processing_blocks","max_item_return_count","max_item_return_count","max_operations_fill_attempts","max_operations_fill_attempts","max_operations_per_block","max_send_wait","max_send_wait","operation_batch_size","operation_batch_size","operation_validity_periods","periods_per_cycle","pos_draw_cached_cycles","pos_draw_cached_cycles","pos_lock_cycles","pos_lookback_cycles","pos_miss_rate_deactivation_threshold","roll_price","serialize","serialize","staking_keys_path","staking_keys_path","stats_timespan","stats_timespan","t0","thread_count","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip"],"q":["massa_consensus","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","massa_consensus::ConsensusCommand","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","massa_consensus::DiscardReason","massa_consensus::ExportBlockStatus","","","massa_consensus::error","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","massa_consensus::error::ConsensusError","","","","","","","","","","","","","","","","","","","","","","","","","","massa_consensus::error::InternalError","massa_consensus::ledger","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","massa_consensus::settingsd":["","","","","","","","","Commands that can be proccessed by consensus.","","Events that are emitted by consensus.","","","","","Exportable version of ActiveBlock Fields that can be …","Block status in the graph that can be exported.","The block version that can be exported. Note that the …","","Block has enough fitness.","","","Returns through a channel full block with specified hash.","","Returns info for a set of addresses (rolls and balance)","Returns through a channel current blockgraph without block …","","Returns through a channel full block and status with …","Returns the bootstrap state","","","","","","Returns through a channel the list of slots with the …","","","","","Block is invalid, either structurally, or because of some …","","","","","","","","Block is incompatible with a final block.","","","","","Map of active blocks, were blocks are in their exported …","Map of active blocks, were blocks are in their exported …","applies a RollUpdate, compensates and returns compensation","applies RollUpdates to self with compensations","Best parents hashe in each thread.","Best parents hashe in each thread.","The block itself, as it was created","Changes caused by this block","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Candidate data","chains with another RollUpdates, compensates and returns …","one HashMap&lt;Block id, period&gt; per thread (blocks that need …","For (i, set) in children, set contains the headers’ …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","get the roll update for a subset of addresses","get roll counts for a subset of addresses.","compensate a roll update, return compensation count","Cycle number","Index by thread and cycle number","Cycle roll updates","","","","dependencies required for validity check","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Finite cache of discarded blocks, in exported version.","drains remaining events and returns them in a VecDeque …","","","","","","","","","","","","","","","","","","","","","","Conversion from blockgraph.","Final data","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Genesis blocks.","Gets the whole block corresponding to given hash.","","Gets the candidate and final ledger data of a list of …","Gets all the aviable information on the block graph …","","Gets the whole block and its status corresponding to given …","","Gets all cliques.","","","","","Returns hashmap: Operation id -&gt; if it is final","Gets (slot, public_key) were the staker with public_key …","","","","Head of the incompatibility graph.","Head of the incompatibility graph.","Header of the corresponding block.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","ie has its fitness reached the given thresold","Active or final","","Last final slot (can be a miss)","Latest final period and block hash in each thread.","Latest final period and block hash in each thread.","","Ledger at last final blocks","","List of maximal cliques of compatible blocks.","List of maximal cliques of compatible blocks.","","","one (block id, period) per thread ( if not genesis )","list of (period, address, did_create) for all …","Per-address production statistics (ok_count, nok_count)","","","Used to seed the random selector at each cycle","Number of rolls an address has","","","Address -&gt; RollUpdate","","","","","","","","","","","","","","Creates a new consensus controller.","","merge another roll updates into self, overwriting existing …","merge another roll counts into self, overwriting existing …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","amount overflow","block creation error {0}","channel error: {0}","config error: {0}","","there was an inconsistency between containers {0}","failed retrieving consensus controller event","fitness overflow","Could not create genesis block {0}","hash conversion error","io error {0}","","invalid block","invalid ledger change: {0}","invalid roll update: {0}","Join error {0}","Our key is missing","ledger inconsistency error {0}","massa_hash error {0}","missing block","models error: {0}","not final roll","oneshot recv error {0}","pool error : {0}","Proof of stake cycle unavailable {0}","Protocol error {0}","error reading leger {0}","Receive  channel error : {0}","roll overflow","Send  channel error : {0}","serde error","sled error: {0}","sled error {0}","slot overflow","random selector seed is too short to be safe","thread overflow","Time error {0}","time overflow","error sending consensus event: {0}","transaction error {0}","try from slice error {0}","Could not propagate block: {0}","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Here we map an address to its balance. When a balance …","Map an address to a LedgerChange","","Ledger specific method on operations","add reward related changes","applies a LedgerChange","Applies given change to that ledger subset note: a failure …","apply ledger changes note: a failure may still leave the …","Atomically apply a batch of changes to the ledger. All …","","","","","","","chain with another LedgerChange","Applies thread changes change to that ledger subset note: …","To empty the db.","","","","","clone subset","clone subset","If subset contains given address","","","","","","","","","","","","","","","","","","","","If there is something in the ledger file, it is overwritten","Get the data for given address","Returns the final balance of an address. 0 if the address …","Returns the final ledger data of a list of unique …","Gets ledger at latest final blocks for query_addrs","","List involved addresses","returns the final periods.","Retrieve and aggregate ledger specific changes in the …","","","","","","","if no latest_final_periods in file, they are initialized …","Used for bootstrap. Note: this cannot be done …","","","merge another ledger changes into self, overwriting …","merge another ledger subset into self, overwriting …","Example","","","","","","","","","","","","","","","","","","Consensus full configuration (static + user defined)","Consensus user-settings (that could be changes in …","Threshold for fitness.","","TESTNET: time when the blockclique is ended.","Private_key to sign genesis blocks.","Time in millis when the blockclique started.","","Maximum block size in bytes","Maximum number of operations per block","Maximum operation validity period count","cycle duration in periods","PoS lock cycles: when some rolls are released, we only …","PoS lookback cycles: when drawing for cycle N, we use the …","number of cycle misses (strictly) above which stakers are …","","Time between the periods in the same thread.","Number of threads","","","","","","","","","","","","","","","","","","","","","","","","","","","","Utility method to derivate a compact configuration (for …","Utility method to derivate a full configuration (static + …","Threshold for fitness.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","If we want to generate blocks. Parameter that shouldn’t …","If we want to generate blocks. Parameter that shouldn’t …","","","","","","","","","","","TESTNET: time when the blockclique is ended.","","","","","force keep at least this number of final periods in RAM …","","","","","","","","","","","If a block  is future_block_processing_max_periods periods …","If a block  is future_block_processing_max_periods periods …","Private_key to sign genesis blocks.","Time in millis when the blockclique started.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","path to ledger db","path to ledger db","","","Maximum block size in bytes","Maximum number of blocks allowed in …","Maximum number of blocks allowed in …","Maximum number of blocks allowed in discarded blocks.","Maximum number of blocks allowed in discarded blocks.","Maximum number of blocks allowed in FutureIncomingBlocks.","Maximum number of blocks allowed in FutureIncomingBlocks.","","","Maximum tries to fill a block with operations","Maximum tries to fill a block with operations","Maximum number of operations per block","","max event send wait","","","Maximum operation validity period count","cycle duration in periods","","number of cached draw cycles for PoS","PoS lock cycles: when some rolls are released, we only …","PoS lookback cycles: when drawing for cycle N, we use the …","number of cycle misses (strictly) above which stakers are …","","","","Staking private keys","Staking private keys","","stats timespan","Time between the periods in the same thread.","Number of threads","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[1,2,3,4,5,6,0,0,0,0,0,0,0,0,5,0,0,0,0,7,5,6,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,5,7,0,9,8,8,0,0,0,7,0,0,5,5,10,11,3,4,10,11,12,12,1,13,12,7,5,14,6,10,15,11,2,8,9,16,3,4,17,18,1,13,12,7,5,14,6,10,15,11,2,8,9,16,3,4,17,18,15,3,12,14,12,7,5,14,6,10,15,11,2,9,16,3,4,17,18,12,7,5,14,6,10,15,11,2,9,16,3,4,17,18,3,4,16,17,18,17,15,3,4,12,1,13,12,7,5,14,6,10,15,11,2,8,9,16,3,4,17,18,1,13,12,7,5,14,6,10,15,11,2,8,9,16,3,4,17,18,12,7,5,14,6,15,11,16,3,4,17,18,10,1,1,13,12,7,5,14,6,10,15,11,2,8,9,16,3,4,17,18,7,6,0,10,15,12,7,5,14,6,10,15,11,8,9,16,3,4,17,18,1,13,12,7,5,14,6,10,15,11,2,8,9,16,3,4,17,18,12,11,16,17,18,10,2,2,2,2,2,2,2,2,2,2,3,2,2,2,2,2,2,10,11,14,1,13,12,7,5,14,6,10,15,11,2,8,9,16,3,4,17,18,1,13,12,7,5,14,6,10,15,11,2,8,9,16,3,4,17,18,4,12,14,16,17,10,11,0,11,4,10,11,7,4,12,12,17,2,2,17,17,16,16,12,12,7,5,14,6,15,11,16,3,4,17,18,0,0,13,3,4,12,11,16,17,18,12,7,5,14,6,10,15,11,2,9,16,3,4,17,18,1,13,12,7,5,14,6,10,15,11,2,8,9,16,3,4,17,18,1,13,12,7,5,14,6,10,15,11,2,8,9,16,3,4,17,18,1,13,12,7,5,14,6,10,15,11,2,8,9,16,3,4,17,18,1,13,12,7,5,14,6,10,15,11,2,8,9,16,3,4,17,18,1,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,31,32,33,29,26,35,30,27,28,34,36,36,33,37,38,39,40,41,41,41,41,0,41,41,41,41,41,41,0,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,42,41,41,42,41,42,41,42,41,42,41,42,41,42,42,41,41,42,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,42,41,42,41,41,42,41,42,41,42,41,42,41,42,41,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,0,0,0,0,70,70,71,71,72,72,70,71,72,70,71,70,71,72,70,71,70,71,70,71,71,70,71,72,70,71,72,70,71,70,71,72,70,71,70,71,72,70,71,71,72,71,72,72,72,70,71,72,73,72,70,71,72,70,71,72,72,70,71,70,71,71,70,71,72,70,71,71,72,70,71,72,70,71,72,70,71,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,74,75,75,76,77,78,79,80,81,82,83,74,75,76,77,78,79,80,81,82,83,74,75,74,75,74,75,75,74,75,76,76,77,77,78,78,79,79,80,80,81,81,82,82,83,83,74,75,76,77,78,79,80,81,82,83,74,75,74,75,74,75,76,77,78,79,80,81,82,83,74,75,75,75,74,75,74,75,76,77,78,79,80,81,82,83,74,75,74,75,75,75,76,77,78,79,80,81,82,83,74,75,75,74,75,74,75,76,77,78,79,80,81,82,83,74,75,74,75,74,75,74,75,74,75,75,74,75,74,75,74,75,74,75,74,75,75,74,75,74,75,75,75,74,75,75,75,75,75,74,75,74,75,74,75,75,75,74,75,76,77,78,79,80,81,82,83,74,75,76,77,78,79,80,81,82,83,74,75,76,77,78,79,80,81,82,83,74,75,76,77,78,79,80,81,82,83,74,75],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["address",3],["rollupdate",3]],["result",4,[["rollcompensation",3],["consensuserror",4]]]],[[["rollupdates",3]],["result",4,[["consensuserror",4]]]],null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[["rollupdates",3]],["result",4,[["addresshashmap",6,[["rollcompensation",3]]],["consensuserror",4]]]],null,null,[[],["exportactiveblock",3]],[[],["discardreason",4]],[[],["exportblockstatus",4]],[[],["exportcompiledblock",3]],[[],["status",4]],[[],["blockgraphexport",3]],[[],["ledgerdataexport",3]],[[],["bootstrapablegraph",3]],[[],["consensuscommandsender",3]],[[],["consensusevent",4]],[[],["rollupdate",3]],[[],["rollupdates",3]],[[],["rollcounts",3]],[[],["threadcyclestate",3]],[[],["exportproofofstake",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["addresshashset",6]]],[[["addresshashset",6]]],[[],["rollcompensation",3]],null,null,null,[[],["ledgerdataexport",3]],[[],["rollupdates",3]],[[],["rollcounts",3]],null,[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],null,[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["discardreason",4]],["bool",15]],[[["status",4]],["bool",15]],null,[[["blockgraph",3],["option",4,[["slot",3]]],["option",4,[["slot",3]]]]],null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4,[["modelserror",4]]]],[[],["result",4,[["modelserror",4]]]],[[],["result",4,[["modelserror",4]]]],[[],["result",4,[["modelserror",4]]]],[[],["result",4,[["modelserror",4]]]],null,[[["blockid",3]]],[[]],[[["addresshashset",6]]],[[["option",4,[["slot",3]]],["option",4,[["slot",3]]]]],[[["address",3]]],[[["blockid",3]]],[[]],[[]],[[["address",3]]],[[["endorsementhashset",6]]],[[],["addresshashset",6]],[[["operationhashset",6]]],[[["address",3]]],[[["slot",3],["slot",3]]],[[["addresshashset",6]]],[[]],[[]],null,null,null,[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],null,null,[[],["bool",15]],null,null,null,null,null,[[],["usize",15]],null,null,[[["discardreason",4]],["bool",15]],[[]],null,null,null,[[["vec",3,[["privatekey",3]]]]],[[["addresshashset",6]]],null,null,null,null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],null,[[["consensusconfig",3],["protocolcommandsender",3],["protocoleventreceiver",3],["poolcommandsender",3],["option",4,[["exportproofofstake",3]]],["option",4,[["bootstrapablegraph",3]]],["i64",15]]],[[["consensuseventreceiver",3]]],[[["addresshashset",6],["rollupdates",3]]],[[["addresshashset",6],["rollcounts",3]]],[[],["result",4,[["vec",3,[["u8",15]]],["modelserror",4]]]],[[],["result",4,[["vec",3,[["u8",15]]],["modelserror",4]]]],[[],["result",4,[["vec",3,[["u8",15]]],["modelserror",4]]]],[[],["result",4,[["vec",3,[["u8",15]]],["modelserror",4]]]],[[],["result",4,[["vec",3,[["u8",15]]],["modelserror",4]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[["error",4]]],[[]],[[["senderror",3,[["consensusevent",4]]]]],[[["recverror",3]]],[[["error",3]]],[[["error",3]]],[[["transactionerror",4,[["internalerror",4]]]]],[[["poolerror",4]]],[[["modelserror",4]]],[[["timeerror",4]]],[[["joinerror",3]]],[[["protocolerror",4]]],[[["tryfromsliceerror",3]]],[[["weightederror",4]]],[[["massahasherror",4]]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[],["option",4,[["error",8]]]],[[],["string",3]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["address",3],["vec",3,[["address",3]]],["address",3],["amount",3],["u32",15]],["result",4,[["consensuserror",4]]]],[[["address",3],["ledgerchange",3]],["result",4,[["consensuserror",4]]]],[[["address",3],["ledgerchange",3]],["result",4,[["consensuserror",4]]]],[[["ledgerchanges",3]],["result",4,[["consensuserror",4]]]],[[["u8",15],["ledgerchanges",3],["u64",15]],["result",4,[["consensuserror",4]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[["ledgerchanges",3]],["result",4,[["consensuserror",4]]]],[[["ledgerchanges",3]],["result",4,[["consensuserror",4]]]],[[],["result",4,[["consensuserror",4]]]],[[],["ledgerchanges",3]],[[],["ledgersubset",3]],[[]],[[]],[[["addresshashset",6]]],[[["addresshashset",6]]],[[["address",3]],["bool",15]],[[],["ledgerchanges",3]],[[],["ledgersubset",3]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[],["result",4]],[[],["result",4]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[],["result",4,[["modelserror",4]]]],[[["ledgersubset",3],["vec",3,[["u64",15]]],["consensusconfig",3]],["result",4,[["ledger",3],["consensuserror",4]]]],[[["address",3]],["ledgerdata",3]],[[["address",3]],["result",4,[["amount",3],["consensuserror",4]]]],[[["addresshashset",6]],["result",4,[["ledgersubset",3],["consensuserror",4]]]],[[["addresshashset",6]],["result",4,[["ledgersubset",3],["consensuserror",4]]]],[[],["addresshashset",6]],[[],["addresshashset",6]],[[],["result",4,[["vec",3,[["u64",15]]],["consensuserror",4]]]],[[["address",3],["vec",3,[["address",3]]],["address",3],["amount",3],["u32",15]],["result",4,[["ledgerchanges",3],["consensuserror",4]]]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[]],[[["consensusconfig",3],["option",4,[["ledgersubset",3]]]],["result",4,[["ledger",3],["consensuserror",4]]]],[[],["result",4,[["ledgersubset",3],["consensuserror",4]]]],[[],["result",4]],[[],["result",4]],[[["addresshashset",6],["ledgerchanges",3]]],[[["addresshashset",6],["ledgersubset",3]]],[[],["result",4,[["vec",3,[["u8",15]]],["modelserror",4]]]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[["ledger",3]],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["consensussettings",3]],[[],["consensusconfig",3]],[[]],[[]],[[],["compactconfig",3]],[[],["consensusconfig",3]],null,[[],["massatime",3]],[[["usize",15]]],[[],["option",4]],[[["usize",15]]],[[["usize",15]]],[[],["massatime",3]],[[],["privatekey",3]],[[["usize",15]]],[[],["amount",3]],[[["usize",15]]],[[["usize",15]]],[[],["string",3]],[[["usize",15]]],[[],["ratio",3]],[[["usize",15]]],[[],["amount",3]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[],["result",4]],[[],["result",4]],null,null,[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],null,null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["result",4]],[[],["result",4]],null,null,null,null,null,null,[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]]],"p":[[3,"ConsensusEventReceiver"],[3,"ConsensusCommandSender"],[3,"RollUpdates"],[3,"RollCounts"],[4,"ExportBlockStatus"],[4,"Status"],[4,"DiscardReason"],[4,"ConsensusCommand"],[4,"ConsensusEvent"],[3,"BlockGraphExport"],[3,"BootstrapableGraph"],[3,"ExportActiveBlock"],[3,"ConsensusManager"],[3,"ExportCompiledBlock"],[3,"LedgerDataExport"],[3,"RollUpdate"],[3,"ThreadCycleState"],[3,"ExportProofOfStake"],[13,"GetBootstrapState"],[13,"GetStats"],[13,"GetActiveStakers"],[13,"RegisterStakingPrivateKeys"],[13,"RemoveStakingAddresses"],[13,"GetStakingAddressses"],[13,"GetCliques"],[13,"GetRecentOperations"],[13,"GetBlockIdsByCreator"],[13,"GetEndorsementsByAddress"],[13,"GetAddressesInfo"],[13,"GetStakersProductionStats"],[13,"GetActiveBlock"],[13,"GetBlockStatus"],[13,"GetSelectionDraws"],[13,"GetEndorsementsById"],[13,"GetOperations"],[13,"GetBlockGraphStatus"],[13,"Invalid"],[13,"Active"],[13,"Final"],[13,"Discarded"],[4,"ConsensusError"],[4,"InternalError"],[13,"ModelsError"],[13,"GenesisCreationError"],[13,"WeightedDistributionError"],[13,"ConfigError"],[13,"MassaHashError"],[13,"ProtocolError"],[13,"JoinError"],[13,"TimeError"],[13,"ContainerInconsistency"],[13,"SendChannelError"],[13,"ReceiveChannelError"],[13,"PoolError"],[13,"SledError"],[13,"ReadError"],[13,"TryFromSliceError"],[13,"LedgerInconsistency"],[13,"InvalidLedgerChange"],[13,"InvalidRollUpdate"],[13,"SledTransactionError"],[13,"IOError"],[13,"SerdeError"],[13,"OneshotReceiveError"],[13,"BlockCreationError"],[13,"PosCycleUnavailable"],[13,"TokioSendError"],[13,"ChannelError"],[13,"TransactionError"],[3,"LedgerChanges"],[3,"LedgerSubset"],[3,"Ledger"],[8,"OperationLedgerInterface"],[3,"ConsensusSettings"],[3,"ConsensusConfig"],[3,"GENESIS_TIMESTAMP"],[3,"END_TIMESTAMP"],[3,"T0"],[3,"GENESIS_KEY"],[3,"BLOCK_REWARD"],[3,"INITIAL_DRAW_SEED"],[3,"POS_MISS_RATE_DEACTIVATION_THRESHOLD"],[3,"ROLL_PRICE"]]},\
"massa_hash":{"doc":"","t":[13,17,4,13,11,11,11,11,11,11,0,11,11,11,11,11,11,11,12,12,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["EngineError","HASH_SIZE_BYTES","MassaHashError","ParsingError","borrow","borrow_mut","fmt","fmt","from","from","hash","into","source","to_string","try_from","try_into","type_id","vzip","0","0","Hash","borrow","borrow_mut","clone","clone_into","cmp","deserialize","eq","fmt","fmt","from","from","from_bs58_check","from_bytes","from_str","hash","into","into_bytes","ne","partial_cmp","serialize","to_bs58_check","to_bytes","to_owned","to_string","try_from","try_into","type_id","vzip"],"q":["massa_hash","","","","","","","","","","","","","","","","","","massa_hash::MassaHashError","","massa_hash::hash","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["error forwarded by engine: {0}","","","parsing error : {0}","","","","","","","","","","","","","","","","","","","","","","","::serde::Deserialize trait for Hash if the deserializer is …","","","","Compute a hash from data.","","Deserialize using bs58 encoding with checksum.","Deserialize a Hash as bytes.","","","","Convert into bytes.","","","::serde::Serialize trait for Hash if the serializer is …","Serialize a Hash using bs58 encoding with checksum.","Serialize a Hash as bytes.","","","","","",""],"i":[1,0,0,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,2,3,0,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4],"f":[null,null,null,null,[[]],[[]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["error",4]]],[[]],null,[[]],[[],["option",4,[["error",8]]]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,null,null,[[]],[[]],[[],["hash",3]],[[]],[[["hash",3]],["ordering",4]],[[["deserializer",8]],["result",4,[["hash",3]]]],[[["hash",3]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[["str",15]],["result",4,[["hash",3],["massahasherror",4]]]],[[],["result",4,[["hash",3],["massahasherror",4]]]],[[["str",15]],["result",4]],[[]],[[]],[[]],[[["hash",3]],["bool",15]],[[["hash",3]],["option",4,[["ordering",4]]]],[[["serializer",8]],["result",4]],[[],["string",3]],[[]],[[]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]]],"p":[[4,"MassaHashError"],[13,"ParsingError"],[13,"EngineError"],[3,"Hash"]]},\
"massa_logging":{"doc":"","t":[14],"n":["massa_trace"],"q":["massa_logging"],"d":[""],"i":[0],"f":[null],"p":[]},\
"massa_models":{"doc":"","t":[12,17,13,17,3,6,6,3,3,3,3,8,8,8,13,13,3,3,6,6,3,13,13,18,18,17,3,4,4,13,17,3,8,8,8,3,13,3,13,13,0,11,0,0,5,10,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,10,11,11,11,11,11,11,11,11,11,10,10,12,11,11,5,11,11,12,0,12,12,12,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,0,0,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,11,11,11,11,0,12,12,0,12,12,12,12,12,11,11,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,0,12,12,0,12,12,12,0,10,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,12,3,3,6,6,3,3,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,12,12,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,3,3,3,3,3,3,3,3,3,3,3,12,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,12,12,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,3,12,11,11,11,11,11,12,11,11,11,11,12,11,11,11,11,11,11,11,13,13,13,13,13,13,13,13,4,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,6,6,6,3,8,11,11,11,11,11,11,11,11,11,11,11,3,3,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,12,11,12,11,11,11,11,12,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,6,6,3,4,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,11,11,11,11,11,11,11,11,3,3,3,12,12,11,11,11,11,11,11,12,11,11,11,11,11,12,12,12,12,11,11,11,11,11,11,11,11,11,12,11,11,11,12,12,12,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,5,5],"n":["0","ADDRESS_SIZE_BYTES","Active","BLOCK_ID_SIZE_BYTES","Block","BlockHashMap","BlockHashSet","BlockHeader","BlockHeaderContent","BlockId","CompactConfig","DeserializeCompact","DeserializeMinBEInt","DeserializeVarInt","Discarded","Discarded","Endorsement","EndorsementContent","EndorsementHashMap","EndorsementHashSet","EndorsementId","InBlock","Incoming","MIN_BE_INT_BASE_SIZE","MIN_BE_INT_BASE_SIZE","OPERATION_ID_SIZE_BYTES","OperationSearchResult","OperationSearchResultBlockStatus","OperationSearchResultStatus","Pending","SLOT_KEY_SIZE","SerializationContext","SerializeCompact","SerializeMinBEInt","SerializeVarInt","StakersCycleProductionStats","Stored","Version","WaitingForDependencies","WaitingForSlot","address","addresses_to_endorsements","amount","api","array_from_slice","be_bytes_min_length","block_reward","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bytes_count","check_signature","clique","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","compute_block_id","compute_endorsement_id","compute_hash","compute_hash","contains_operation","content","content","creator","cycle","delta_f0","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","end_timestamp","endorsed_block","endorsements","eq","eq","eq","equivalent","equivalent","equivalent","error","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_be_bytes_min","from_bs58_check","from_bs58_check","from_bytes","from_bytes","from_bytes_compact","from_bytes_compact","from_bytes_compact","from_bytes_compact","from_bytes_compact","from_bytes_compact","from_bytes_compact","from_str","from_str","from_str","from_varint_bytes","from_varint_bytes_bounded","genesis_timestamp","get_first_bit","get_roll_involved_addresses","get_serialization_context","hash","hash","header","hhasher","in_blocks","in_pool","index","init_serialization_context","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_bytes","into_bytes","involved_addresses","is_compatible","is_final","ledger","massa_hash","max_ask_blocks_per_message","max_block_endorsements","max_block_operations","max_block_size","max_bootstrap_blocks","max_bootstrap_children","max_bootstrap_cliques","max_bootstrap_deps","max_bootstrap_message_size","max_bootstrap_pos_cycles","max_bootstrap_pos_entries","max_endorsements_per_message","max_message_size","max_operations_per_message","max_peer_list_length","ne","ne","ne","new_signed","new_signed","node","ok_nok_counts","op","operation","operation_merkle_root","operation_validity_periods","operations","parent_count","parents","partial_cmp","partial_cmp","periods_per_cycle","pos_lock_cycles","pos_lookback_cycles","roll_price","sender_public_key","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","signature","signature","slot","slot","slot","stats","status","t0","thread_count","timeslots","to_be_bytes_min","to_bytes","to_bytes","to_bytes_compact","to_bytes_compact","to_bytes_compact","to_bytes_compact","to_bytes_compact","to_bytes_compact","to_bytes_compact","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_varint_bytes","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","u8_from_slice","verify_signature","verify_signature","verify_slot_hash_signature","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_serialization_context","0","Address","AddressCycleProductionStats","AddressHashMap","AddressHashSet","AddressState","Addresses","addrs","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","cmp","cycle","deserialize","deserialize","deserialize","deserialize","eq","equivalent","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from_bs58_check","from_bytes","from_public_key","from_str","get_thread","hash","into","into","into","into","into_bytes","is_final","ledger_info","ne","nok_count","ok_count","partial_cmp","production_stats","rolls","serialize","serialize","serialize","serialize","to_bs58_check","to_bytes","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","Amount","borrow","borrow_mut","checked_add","checked_div_u64","checked_mul_u64","checked_sub","clone","clone_into","cmp","default","deserialize","eq","equivalent","fmt","fmt","from","from_bytes_compact","from_raw","from_str","into","ne","partial_cmp","saturating_add","saturating_sub","serialize","to_bytes_compact","to_owned","to_raw","to_string","try_from","try_into","type_id","vzip","APISettings","AddressInfo","BlockInfo","BlockInfoContent","BlockSummary","CompactAddressInfo","EndorsementInfo","IndexedSlot","LedgerInfo","NodeStatus","OperationInfo","RollsInfo","TimeInterval","active_rolls","address","address","balance","bind_private","bind_public","block","block_draws","blocks_created","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","candidate_ledger_info","candidate_rolls","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","compact","config","connected_nodes","consensus_stats","content","creator","current_cycle","current_time","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","draw_lookahead_period_count","end","endorsement","endorsement_draws","eq","equivalent","extend","final_ledger_info","final_rolls","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","hash","id","id","id","id","in_blocks","in_blocks","in_pool","in_pool","index","into","into","into","into","into","into","into","into","into","into","into","into","into","involved_in_endorsements","involved_in_operations","is_final","is_final","is_final","is_final","is_in_blockclique","is_in_blockclique","is_stale","is_stale","last_slot","ledger_info","locked_balance","max_arguments","ne","network_stats","next_slot","node_id","node_ip","operation","parents","pool_stats","production_stats","rolls","rolls","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","slot","slot","start","thread","thread","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","version","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","Clique","block_ids","borrow","borrow_mut","clone","clone_into","deserialize","fitness","fmt","from","from_bytes_compact","into","is_blockclique","serialize","to_bytes_compact","to_owned","try_from","try_into","type_id","vzip","AmountParseError","BufferError","CheckedOperationError","DeserializeError","HashError","InavalidVersionError","InvalidLedgerChange","MassaHashError","ModelsError","PeriodOverflowError","SerializeError","ThreadOverflowError","TimeError","TimeOverflowError","borrow","borrow_mut","fmt","fmt","from","from","from","into","source","to_string","try_from","try_into","type_id","vzip","0","0","0","0","0","0","0","0","0","BuildHHasher","HHashMap","HHashSet","HHasher","PreHashed","borrow","borrow_mut","default","finish","from","into","try_from","try_into","type_id","vzip","write","LedgerChange","LedgerData","apply_change","balance","balance_delta","balance_increment","borrow","borrow","borrow_mut","borrow_mut","chain","clone","clone","clone_into","clone_into","default","default","deserialize","deserialize","fmt","fmt","from","from","from_bytes_compact","from_bytes_compact","into","into","is_nil","is_nil","new","serialize","serialize","to_bytes_compact","to_bytes_compact","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","PubkeySig","borrow","borrow_mut","deserialize","fmt","from","into","public_key","serialize","signature","try_from","try_into","type_id","vzip","0","NodeId","borrow","borrow_mut","clone","clone_into","cmp","deserialize","eq","equivalent","fmt","fmt","from","from_str","hash","into","ne","partial_cmp","serialize","to_owned","to_string","try_from","try_into","type_id","vzip","Operation","OperationContent","OperationHashMap","OperationHashSet","OperationId","OperationType","RollBuy","RollSell","Transaction","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","cmp","content","deserialize","deserialize","deserialize","deserialize","eq","equivalent","expire_period","fee","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from_bs58_check","from_bytes","from_bytes_compact","from_bytes_compact","from_bytes_compact","from_str","get_ledger_involved_addresses","get_operation_id","get_roll_involved_addresses","get_validity_range","hash","into","into","into","into","into_bytes","ne","op","partial_cmp","sender_public_key","serialize","serialize","serialize","serialize","signature","to_bytes","to_bytes_compact","to_bytes_compact","to_bytes_compact","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","verify_integrity","verify_signature","vzip","vzip","vzip","vzip","amount","recipient_address","roll_count","roll_count","Slot","borrow","borrow_mut","clone","clone_into","cmp","deserialize","eq","equivalent","fmt","fmt","from","from_bytes_compact","from_bytes_key","get_cycle","get_first_bit","get_next_slot","hash","into","ne","new","partial_cmp","period","serialize","thread","to_bytes_compact","to_bytes_key","to_owned","to_string","try_from","try_into","type_id","vzip","ConsensusStats","NetworkStats","PoolStats","active_node_count","banned_peer_count","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clique_count","clone","clone_into","deserialize","deserialize","deserialize","end_timespan","endorsement_count","final_block_count","final_operation_count","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","in_connection_count","into","into","into","known_peer_count","operation_count","out_connection_count","serialize","serialize","serialize","staker_count","stale_block_count","start_timespan","to_owned","to_string","to_string","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","get_block_slot_timestamp","get_current_latest_block_slot","get_latest_block_slot_at_timestamp","time_range_to_slot_range"],"q":["massa_modelsmassa_models::OperationSearchResultStatus","massa_models::address","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","massa_models::amount","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","massa_models::apimassa_models::clique","","","","","","","","","","","","","","","","","","","","massa_models::error","","","","","","","","","","","","","","","","","","","","","","","","","","","","massa_models::error::ModelsError","","","","","","","","","massa_models::hhasher","","","","","","","","","","","","","","","","massa_models::ledger","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","massa_models::massa_hash","","","","","","","","","","","","","","massa_models::node","","","","","","","","","","","","","","","","","","","","","","","","","massa_models::operation","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","massa_models::operation::OperationType","","","","massa_models::slot","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","massa_models::stats","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","massa_models::timeslots","","",""],"d":["","","","","","","","","","","Compact representation of key values of consensus …","","","","","","","","","","","","","","","","","","","","","a context for model serialization/deserialization","","","","","","Application version, checked during handshakes","","","","","","","","Compute the minimal big endian deserialization size","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Verify the signature of the header","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Generate the block id without verifying the integrity of …","","","","","","","","","Threshold for fitness.","","","","","","","","","","","","","","","TESTNET: time when the blockclique is ended.","hash of endorsed block","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Deserializes a minimally sized big endian integer to Self …","","","","","","","","","","","","","","","Deserialize variable size integer to Self from the …","Deserialize variable size integer to Self from the …","Time in millis when the blockclique started.","","Retrieve roll involving addresses","Get a clone of the context. For tests only.","","","","","","","endorsement index inside the block","Initialize the global context, should be called once at …","","","","","","","","","","","","","","","","","retrieves a mapping of addresses to the list of operation …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Maximum operation validity period count","","","","","","cycle duration in periods","PoS lock cycles: when some rolls are released, we only …","PoS lookback cycles: when drawing for cycle N, we use the …","","Public key of the endorser.","","","","","","","","","","","","","","","","","","","slot of endorsed block","","","Time between the periods in the same thread.","Number of threads","warning: assumes thread_count &gt;= 1, t0_millis &gt;= 1, …","serializes with the minimal amount of big endian bytes","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Serialize as varint bytes","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Verify the signature and integrity of the endorsement and …","","","","","","","","","","","","","","","","Use the tls context, should be called only after …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Example","Example","Computes address associated with given public key","","Gets the associated tread. Depends on the thread_count","","","","","","Example","","","","","","","","","","","","","Example","Example","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","When an address is drawn to create an endorsement it is …xample","","","","","","amount parse error","buffer error: {0}","checked operation error","Deserialization error: {0}","hashing error","invalid version identifier: {0}","invalid ledger change: {0}","massa_hash error: {0}","","period overflow error","Serialization error: {0}","thread overflow error","Time error {0}","Time overflow error","","","","","","","","","","","","","","","","","","","","","","","","BuildHasherDefault specialization for HHasher","HashMap specialization for PreHashed keys This hashmap is …","HashSet specialization for PreHashed keys This hashset is …","A Hasher for PreHashed keys that is faster because it …","A trait indicating that its carrier is already a hash with …","","","","finish the hashing process and return the truncated u64 …","","","","","","","write the bytes of a PreHashed key into the HHasher Panics …","A balance change that can be applied to an address","","","","Amount to add or substract","whether to increment or decrement balance of delta","","","","","Applies another ledger change on top of self","","","","","","","","","","","","","","","","","returns true if the balance is zero","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","NodeId wraps a public key to uniquely identify a node.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Verifies the signature and integrity of the operation and …","","","","","","","","","","","","","","","","","","","","","","Deserializes from a compact representation","Deserializes a slot from its fixed-size sortable binary …","","","Returns the next Slot","","","","","","","","","Returns a compact binary representation of the slot","Returns a fixed-size sortable binary key","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Gets timestamp in millis for given slot.","Returns the thread and block slot index of the current …","Returns the thread and block period index of the latest …","Turns an MassaTime range [start, end) with optional …"],"i":[1,0,2,0,0,0,0,0,0,0,0,0,0,0,2,3,0,0,0,0,0,3,2,4,4,0,0,0,0,3,0,0,0,0,0,0,2,0,2,2,0,5,0,0,0,4,6,1,5,7,8,2,3,9,10,11,12,13,14,6,15,1,5,7,8,2,3,9,10,11,12,13,14,6,15,5,8,0,1,5,7,8,2,3,9,10,11,12,13,14,6,15,1,5,7,8,2,3,9,10,11,12,13,14,6,15,1,12,8,13,7,14,5,8,13,7,10,6,1,5,7,8,2,3,9,10,11,12,13,14,6,15,6,14,7,1,12,15,1,12,15,0,9,1,1,5,5,7,7,8,8,2,3,9,10,11,12,12,13,13,14,6,15,15,1,5,7,8,2,3,9,10,11,12,13,14,6,15,4,1,12,1,12,16,5,7,8,13,14,15,1,12,15,17,17,6,1,5,0,1,12,5,0,9,9,14,0,1,5,7,8,2,3,9,10,11,12,13,14,6,15,1,12,5,15,10,0,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,1,12,15,8,13,0,10,9,0,7,6,5,11,7,1,12,6,6,6,6,14,1,5,7,8,2,3,9,10,11,12,13,14,6,15,8,13,0,7,14,0,9,6,6,0,18,1,12,19,5,7,8,13,14,15,1,5,7,8,2,3,9,10,11,12,13,14,6,15,1,5,7,8,12,13,15,20,1,5,7,8,2,3,9,10,11,12,13,14,6,15,1,5,7,8,2,3,9,10,11,12,13,14,6,15,1,5,7,8,2,3,9,10,11,12,13,14,6,15,0,8,13,8,1,5,7,8,2,3,9,10,11,12,13,14,6,15,0,21,0,0,0,0,0,0,22,23,22,24,25,23,22,24,25,23,22,24,25,23,22,24,25,23,24,23,22,24,25,23,23,23,23,22,24,25,23,22,24,25,23,23,23,23,23,23,23,22,24,25,23,24,25,23,24,24,23,25,25,23,22,24,25,23,23,23,22,24,25,23,23,22,24,25,23,22,24,25,23,22,24,25,23,22,24,25,0,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,0,0,0,0,0,0,0,0,0,0,0,0,0,27,28,29,29,30,30,31,28,28,32,33,34,27,28,35,29,36,37,31,38,39,30,32,33,34,27,28,35,29,36,37,31,38,39,30,34,27,34,27,36,39,30,34,27,36,39,30,28,32,32,32,37,38,32,32,32,33,34,27,28,35,36,37,31,38,39,30,30,39,36,28,35,35,33,34,27,32,32,33,33,34,34,27,27,28,28,35,35,29,36,36,37,37,31,38,38,39,30,32,33,34,27,28,35,29,36,37,31,38,39,30,35,33,36,37,38,33,36,33,36,35,32,33,34,27,28,35,29,36,37,31,38,39,30,28,28,33,36,31,38,31,38,31,38,32,28,34,30,35,32,32,32,32,33,38,32,28,28,29,32,33,34,27,28,35,29,36,37,31,38,39,35,38,39,28,29,34,27,36,39,30,32,33,34,27,28,35,29,36,37,38,32,33,34,27,28,35,29,36,37,31,38,39,30,32,33,34,27,28,35,29,36,37,31,38,39,30,32,33,34,27,28,35,29,36,37,31,38,39,30,32,32,33,34,27,28,35,29,36,37,31,38,39,30,0,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,41,41,41,41,41,41,41,41,0,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,42,43,44,45,46,47,48,49,50,0,0,0,0,0,51,51,51,51,51,51,51,51,51,51,51,0,0,52,52,53,53,52,53,52,53,53,52,53,52,53,52,53,52,53,52,53,52,53,52,53,52,53,52,53,52,52,53,52,53,52,53,52,53,52,53,52,53,52,53,0,54,54,54,54,54,54,54,54,54,54,54,54,54,55,0,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,0,0,0,0,0,0,56,56,56,57,58,59,56,57,58,59,56,57,58,59,56,57,58,59,56,57,58,57,58,59,56,57,57,59,59,57,57,58,58,59,59,56,56,57,58,59,56,57,57,58,59,56,57,58,58,58,58,57,57,58,59,56,57,57,59,57,59,57,58,59,56,58,57,58,59,56,57,58,59,56,57,58,59,56,57,58,59,56,57,58,59,56,57,58,59,56,58,58,57,58,59,56,60,60,61,62,0,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,0,0,0,64,64,64,65,66,64,65,66,65,65,65,64,65,66,65,66,65,65,64,64,65,65,66,66,64,65,66,64,64,65,66,64,66,64,64,65,66,65,65,65,65,64,65,66,64,65,66,64,65,66,64,65,66,64,65,66,0,0,0,0],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["endorsementhashmap",6]],["result",4,[["addresshashmap",6,[["endorsementhashset",6]]],["modelserror",4]]]],null,null,[[],["result",4,[["modelserror",4]]]],[[],["usize",15]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4,[["u64",15],["modelserror",4]]]],[[],["result",4,[["modelserror",4]]]],null,[[],["blockid",3]],[[],["block",3]],[[],["blockheadercontent",3]],[[],["blockheader",3]],[[],["operationsearchresultblockstatus",4]],[[],["operationsearchresultstatus",4]],[[],["operationsearchresult",3]],[[],["stakerscycleproductionstats",3]],[[],["serializationcontext",3]],[[],["endorsementid",3]],[[],["endorsement",3]],[[],["endorsementcontent",3]],[[],["compactconfig",3]],[[],["version",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["blockid",3]],["ordering",4]],[[["endorsementid",3]],["ordering",4]],[[],["result",4,[["blockid",3],["modelserror",4]]]],[[],["result",4,[["endorsementid",3],["modelserror",4]]]],[[],["result",4,[["hash",3],["modelserror",4]]]],[[],["result",4,[["hash",3],["modelserror",4]]]],[[["operation",3]],["result",4,[["bool",15],["modelserror",4]]]],null,null,null,null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4,[["version",3]]]],null,null,null,[[["blockid",3]],["bool",15]],[[["endorsementid",3]],["bool",15]],[[["version",3]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],null,[[["operationsearchresult",3]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4,[["modelserror",4]]]],[[["str",15]],["result",4,[["blockid",3],["modelserror",4]]]],[[["str",15]],["result",4,[["endorsementid",3],["modelserror",4]]]],[[],["result",4,[["blockid",3],["modelserror",4]]]],[[],["result",4,[["endorsementid",3],["modelserror",4]]]],[[],["result",4,[["modelserror",4]]]],[[],["result",4,[["modelserror",4]]]],[[],["result",4,[["modelserror",4]]]],[[],["result",4,[["modelserror",4]]]],[[],["result",4,[["modelserror",4]]]],[[],["result",4,[["modelserror",4]]]],[[],["result",4,[["modelserror",4]]]],[[["str",15]],["result",4]],[[["str",15]],["result",4]],[[["str",15]],["result",4]],[[],["result",4,[["modelserror",4]]]],[[],["result",4,[["modelserror",4]]]],null,[[],["bool",15]],[[],["result",4,[["addresshashset",6],["modelserror",4]]]],[[],["serializationcontext",3]],[[]],[[]],null,null,null,null,null,[[["serializationcontext",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["operationhashmap",6]],["result",4,[["addresshashmap",6,[["operationhashset",6]]],["modelserror",4]]]],[[["version",3]],["bool",15]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["blockid",3]],["bool",15]],[[["endorsementid",3]],["bool",15]],[[["version",3]],["bool",15]],[[["privatekey",3],["blockheadercontent",3]],["result",4,[["modelserror",4]]]],[[["privatekey",3],["endorsementcontent",3]],["result",4,[["modelserror",4]]]],null,null,null,null,null,null,null,null,null,[[["blockid",3]],["option",4,[["ordering",4]]]],[[["endorsementid",3]],["option",4,[["ordering",4]]]],null,null,null,null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],null,null,null,null,null,null,null,null,null,null,[[],["result",4,[["vec",3,[["u8",15]]],["modelserror",4]]]],[[]],[[]],[[],["result",4,[["vec",3,[["u8",15]]],["modelserror",4]]]],[[],["result",4,[["vec",3,[["u8",15]]],["modelserror",4]]]],[[],["result",4,[["vec",3,[["u8",15]]],["modelserror",4]]]],[[],["result",4,[["vec",3,[["u8",15]]],["modelserror",4]]]],[[],["result",4,[["vec",3,[["u8",15]]],["modelserror",4]]]],[[],["result",4,[["vec",3,[["u8",15]]],["modelserror",4]]]],[[],["result",4,[["vec",3,[["u8",15]]],["modelserror",4]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["vec",3,[["u8",15]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["result",4,[["u8",15],["modelserror",4]]]],[[["hash",3]],["result",4,[["modelserror",4]]]],[[],["result",4,[["modelserror",4]]]],[[["slot",3],["hash",3],["signature",3],["publickey",3]],["result",4,[["modelserror",4]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["address",3]],[[],["addresses",3]],[[],["addresscycleproductionstats",3]],[[],["addressstate",3]],[[]],[[]],[[]],[[]],[[["address",3]],["ordering",4]],null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["address",3]],["bool",15]],[[],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[["str",15]],["result",4,[["address",3],["modelserror",4]]]],[[],["result",4,[["address",3],["modelserror",4]]]],[[["publickey",3]],["result",4,[["modelserror",4]]]],[[["str",15]],["result",4]],[[["u8",15]],["u8",15]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,[[["address",3]],["bool",15]],null,null,[[["address",3]],["option",4,[["ordering",4]]]],null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["string",3]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],null,[[]],[[]],[[["amount",3]],["option",4]],[[["u64",15]],["option",4]],[[["u64",15]],["option",4]],[[["amount",3]],["option",4]],[[],["amount",3]],[[]],[[["amount",3]],["ordering",4]],[[],["amount",3]],[[],["result",4,[["amount",3]]]],[[["amount",3]],["bool",15]],[[],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[],["result",4,[["modelserror",4]]]],[[["u64",15]]],[[["str",15]],["result",4]],[[]],[[["amount",3]],["bool",15]],[[["amount",3]],["option",4,[["ordering",4]]]],[[["amount",3]]],[[["amount",3]]],[[],["result",4]],[[],["result",4,[["vec",3,[["u8",15]]],["modelserror",4]]]],[[]],[[],["u64",15]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,[[],["ledgerinfo",3]],[[],["rollsinfo",3]],[[],["endorsementinfo",3]],[[],["timeinterval",3]],[[],["apisettings",3]],[[]],[[]],[[]],[[]],[[]],[[],["compactaddressinfo",3]],null,null,null,null,null,null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],null,null,null,null,[[["indexedslot",3]],["bool",15]],[[],["bool",15]],[[["operationinfo",3]]],null,null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["indexedslot",3]],["bool",15]],null,null,null,null,null,null,null,null,null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,[[]],[[]],[[],["clique",3]],[[]],[[],["result",4]],null,[[["formatter",3]],["result",6]],[[]],[[],["result",4,[["modelserror",4]]]],[[]],null,[[],["result",4]],[[],["result",4,[["vec",3,[["u8",15]]],["modelserror",4]]]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["massahasherror",4]]],[[]],[[["timeerror",4]]],[[]],[[],["option",4,[["error",8]]]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[],["u64",15]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],null,null,[[["ledgerchange",3]],["result",4,[["modelserror",4]]]],null,null,null,[[]],[[]],[[]],[[]],[[["ledgerchange",3]],["result",4,[["modelserror",4]]]],[[],["ledgerdata",3]],[[],["ledgerchange",3]],[[]],[[]],[[],["ledgerdata",3]],[[]],[[],["result",4]],[[],["result",4]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[],["result",4,[["modelserror",4]]]],[[],["result",4,[["modelserror",4]]]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[["amount",3]],["ledgerdata",3]],[[],["result",4]],[[],["result",4]],[[],["result",4,[["vec",3,[["u8",15]]],["modelserror",4]]]],[[],["result",4,[["vec",3,[["u8",15]]],["modelserror",4]]]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],null,[[]],[[]],[[],["result",4]],[[["formatter",3]],["result",6]],[[]],[[]],null,[[],["result",4]],null,[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,null,[[]],[[]],[[],["nodeid",3]],[[]],[[["nodeid",3]],["ordering",4]],[[],["result",4]],[[["nodeid",3]],["bool",15]],[[],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[["str",15]],["result",4]],[[]],[[]],[[["nodeid",3]],["bool",15]],[[["nodeid",3]],["option",4,[["ordering",4]]]],[[],["result",4]],[[]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["operationid",3]],[[],["operation",3]],[[],["operationcontent",3]],[[],["operationtype",4]],[[]],[[]],[[]],[[]],[[["operationid",3]],["ordering",4]],null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["operationid",3]],["bool",15]],[[],["bool",15]],null,null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[["str",15]],["result",4,[["operationid",3],["modelserror",4]]]],[[],["result",4,[["operationid",3],["modelserror",4]]]],[[],["result",4,[["modelserror",4]]]],[[],["result",4,[["modelserror",4]]]],[[],["result",4,[["modelserror",4]]]],[[["str",15]],["result",4]],[[],["result",4,[["addresshashset",6],["modelserror",4]]]],[[],["result",4,[["operationid",3],["modelserror",4]]]],[[],["result",4,[["addresshashset",6],["modelserror",4]]]],[[["u64",15]],["rangeinclusive",3,[["u64",15]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[["operationid",3]],["bool",15]],null,[[["operationid",3]],["option",4,[["ordering",4]]]],null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],null,[[]],[[],["result",4,[["vec",3,[["u8",15]]],["modelserror",4]]]],[[],["result",4,[["vec",3,[["u8",15]]],["modelserror",4]]]],[[],["result",4,[["vec",3,[["u8",15]]],["modelserror",4]]]],[[]],[[]],[[]],[[]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["result",4,[["operationid",3],["modelserror",4]]]],[[],["result",4,[["modelserror",4]]]],[[]],[[]],[[]],[[]],null,null,null,null,null,[[]],[[]],[[],["slot",3]],[[]],[[],["ordering",4]],[[],["result",4]],[[["slot",3]],["bool",15]],[[],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[],["result",4,[["modelserror",4]]]],[[]],[[["u64",15]],["u64",15]],[[],["bool",15]],[[["u8",15]],["result",4,[["slot",3],["modelserror",4]]]],[[]],[[]],[[["slot",3]],["bool",15]],[[["u64",15],["u8",15]],["slot",3]],[[],["option",4,[["ordering",4]]]],null,[[],["result",4]],null,[[],["result",4,[["vec",3,[["u8",15]]],["modelserror",4]]]],[[]],[[]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],null,[[],["consensusstats",3]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],null,null,null,null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],null,[[]],[[]],[[]],null,null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],null,null,null,[[]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[["u8",15],["massatime",3],["massatime",3],["slot",3]],["result",4,[["massatime",3],["modelserror",4]]]],[[["u8",15],["massatime",3],["massatime",3],["i64",15]],["result",4,[["option",4,[["slot",3]]],["modelserror",4]]]],[[["u8",15],["massatime",3],["massatime",3],["massatime",3]],["result",4,[["option",4,[["slot",3]]],["modelserror",4]]]],[[["u8",15],["massatime",3],["massatime",3],["option",4,[["massatime",3]]],["option",4,[["massatime",3]]]],["result",4,[["modelserror",4]]]]],"p":[[3,"BlockId"],[4,"OperationSearchResultBlockStatus"],[4,"OperationSearchResultStatus"],[8,"DeserializeMinBEInt"],[3,"Block"],[3,"CompactConfig"],[3,"BlockHeaderContent"],[3,"BlockHeader"],[3,"OperationSearchResult"],[3,"StakersCycleProductionStats"],[3,"SerializationContext"],[3,"EndorsementId"],[3,"Endorsement"],[3,"EndorsementContent"],[3,"Version"],[8,"DeserializeCompact"],[8,"DeserializeVarInt"],[8,"SerializeMinBEInt"],[8,"SerializeCompact"],[8,"SerializeVarInt"],[13,"InBlock"],[3,"Addresses"],[3,"Address"],[3,"AddressCycleProductionStats"],[3,"AddressState"],[3,"Amount"],[3,"RollsInfo"],[3,"AddressInfo"],[3,"CompactAddressInfo"],[3,"APISettings"],[3,"BlockInfoContent"],[3,"NodeStatus"],[3,"OperationInfo"],[3,"LedgerInfo"],[3,"IndexedSlot"],[3,"EndorsementInfo"],[3,"BlockInfo"],[3,"BlockSummary"],[3,"TimeInterval"],[3,"Clique"],[4,"ModelsError"],[13,"SerializeError"],[13,"DeserializeError"],[13,"BufferError"],[13,"MassaHashError"],[13,"AmountParseError"],[13,"CheckedOperationError"],[13,"InavalidVersionError"],[13,"InvalidLedgerChange"],[13,"TimeError"],[3,"HHasher"],[3,"LedgerData"],[3,"LedgerChange"],[3,"PubkeySig"],[3,"NodeId"],[4,"OperationType"],[3,"OperationId"],[3,"Operation"],[3,"OperationContent"],[13,"Transaction"],[13,"RollBuy"],[13,"RollSell"],[3,"Slot"],[3,"NetworkStats"],[3,"ConsensusStats"],[3,"PoolStats"]]},\
"massa_network":{"doc":"Manages a connection with a node","t":[12,12,12,12,13,13,13,13,13,13,13,13,3,13,13,4,3,6,13,3,3,3,6,6,13,13,13,13,13,13,13,13,6,13,13,13,4,3,4,4,3,3,13,13,13,3,13,3,3,6,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,6,13,11,12,12,12,12,12,11,11,11,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,12,11,12,12,11,11,11,11,11,11,11,11,11,11,0,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,17,17,17,17,17,17,17,17,3,12,12,12,11,11,11,11,12,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,11,11,11,11,12],"n":["0","0","0","0","ActiveConnectionMissing","AskForBlocks","AskedForBlocks","Ban","BanIp","Banned","BlockNotFound","BlockNotFound","BootstrapPeers","ChannelError","ConnectionClosed","ConnectionClosureReason","ConnectionId","Connector","ContainerInconsistencyError","DefaultConnector","DefaultEstablisher","DefaultListener","Establisher","Establisher","Failed","GeneralProtocolError","GetBootstrapPeers","GetPeers","GetStats","HandshakeError","IOError","InvalidIpError","Listener","MassaHashError","MissingPeersError","ModelsError","NetworkCommand","NetworkCommandSender","NetworkError","NetworkEvent","NetworkEventReceiver","NetworkManager","NewConnection","NodeSignMessage","Normal","Peer","PeerConnectionError","PeerInfo","Peers","ReadHalf","ReceivedBlock","ReceivedBlockHeader","ReceivedEndorsements","ReceivedOperations","SendBlock","SendBlockHeader","SendEndorsements","SendOperations","SerdeError","TimeError","TokieRecvError","TokioTaskJoinError","Unban","UnexpectedNodeCommandChannelClosure","UnexpectedWriterClosure","WriteHalf","WrongSignature","accept","active_in_connections","active_nodes","active_out_connection_attempts","active_out_connections","advertised","ask_for_block_list","ban","ban_ip","banned","block_not_found","bootstrap","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","connect","default","default","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","drain","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bytes_compact","get_bootstrap_peers","get_connector","get_listener","get_network_stats","get_peers","hash","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","ip","last_alive","last_failure","ne","new","node_sign_message","our_node_id","partial_cmp","peer_info","peers","send_block","send_block_header","send_endorsements","send_operations","serialize","serialize","serialize","serialize","serialize","serialize","settings","source","start_network_controller","stop","to_bytes_compact","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unban","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","wait_event","0","0","0","0","0","block","block_id","endorsements","header","list","msg","node","node","node","node","node","operations","response_tx","response_tx","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","block","block_id","endorsements","header","list","node","node","node","node","node","operations","source_node_id","CHANNEL_SIZE","HANDSHAKE_RANDOMNESS_SIZE_BYTES","MAX_ADVERTISE_LENGTH","MAX_ASK_BLOCKS_PER_MESSAGE","MAX_ENDORSEMENTS_PER_MESSAGE","MAX_MESSAGE_SIZE","MAX_OPERATIONS_PER_MESSAGE","NODE_SEND_CHANNEL_SIZE","NetworkSettings","ask_peer_list_interval","ban_timeout","bind","borrow","borrow_mut","clone","clone_into","connect_timeout","deserialize","fmt","from","into","max_banned_peers","max_idle_peers","max_in_connections_per_ip","max_in_nonbootstrap_connections","max_out_bootstrap_connection_attempts","max_out_nonbootstrap_connection_attempts","max_send_wait","message_timeout","peers_file","peers_file_dump_interval","private_key_file","protocol_port","routable_ip","target_bootstrap_connections","target_out_nonbootstrap_connections","to_owned","try_from","try_into","type_id","vzip","wakeup_interval"],"q":["massa_networkmassa_network::NetworkCommand","","","","","","","","","","","","","","","","","","","massa_network::NetworkError","","","","","","","","","","","","","","massa_network::NetworkEvent","","","","","","","","","","","","","","massa_network::settings","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","Active connection missing:<code>{0}</code>","Ask for a block from a node.","Someone ask for block with given header hash.","","","Connection closed after node ban","","That node does not have this block","","An error occurred during channel communication: {0}","","","A unique connection id for a node","","container inconsistency error: {0}","Initiates a connection with given timeout in millis","Establishes a connection","The listener we are using","","","Connection failed for some reason","Protocol err:{0}","","","","handshake error:{0:?}","IO error : {0}","The ip:<code>{0}</code> address is not valid","","massa_hash error {0}","missing peers","models error: {0}","Commands that the worker can execute","","","","","","","","Connection was closed properly","","Error during network connection:<code>{0:?}</code>","All information concerning a peer is here","","","A block was received","A block header was received","","","Send that block to node.","Send a header to a node.","","","Serde error : {0}","Time error {0}","error receiving oneshot response : {0}","A tokio task has crashed err:{0}","","the network controller should not drop a node command …","the writer of a node should not drop its event sender …","","wrong signature","Accepts a new incoming connection from this listener.","Current number of active in connections with that peer. Isn…","","Current number of active out connection attempts with that …","Current number of active out connections with that peer. …","Whether peer was promoted through another peer","Send the order to ask for a block.","","","If peer is banned.","","If peer is boostrap, ie peer was in initial peer file","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Tries to connect to addr","","","","","","","","","drains remaining events and returns them in a VecDeque …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Send the order to get bootstrap peers.","Get the connector with associated timeout","Gets the associated listener","","Send the order to get peers.","","","","","","","","","","","","","","","","","Peer ip address.","Time in millis when peer was last alive","Time in millis of peer’s last failure","","Creates an Establisher.","Sign a message using the node’s private key","","","","","Send the order to send block.","Send the order to send block header.","","","","","","","","","","","Starts a new NetworkWorker in a spawned task","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Limit on the number of peers we advertise to others.","Max number of hash in the message AskForBlocks","Max number of endorsements per message","Maximum message length in bytes","Max number of operations per message","","Network configuration","Every ask_peer_list_interval in millis we ask every one …","Time after which we forget a node","Where to listen for communications.","","","","","Time interval spent waiting for a response from a peer. In …","","","","","Limit on the number of banned peers we remember.","Limit on the number of idle peers we remember.","Limit on the number of in connections per ip.","Limit on the number of in connections.","Limit on the number of simultaneout outgoing bootstrap …","Limit on the total current number of outgoing …","Max wait time for sending a Network or Node event.","After message_timeout millis we are no longer waiting on …","Path to the file containing known peers.","Peer database is dumped every peers_file_dump_interval in …","Path to the file containing our private_key","Protocol port","Our own IP if it is routable, else None.","Target number of bootstrap connections.","Target number of outgoing nonbootstrap connections.","","","","","","Network_worker will try to connect to available peers …"],"i":[1,2,3,4,5,6,7,6,6,8,6,7,0,5,7,0,0,0,5,0,0,0,0,0,8,5,6,6,6,5,5,5,0,5,5,5,0,0,0,0,0,0,7,6,8,0,5,0,0,0,7,7,7,7,6,6,6,6,5,5,5,5,6,5,5,0,5,9,10,11,10,10,10,3,3,3,10,3,10,1,12,2,8,5,9,13,14,3,6,11,15,7,4,10,1,12,2,8,5,9,13,14,3,6,11,15,7,4,10,2,8,3,11,15,4,10,2,8,3,11,15,4,10,2,13,2,14,2,8,11,15,4,10,1,2,8,2,2,8,5,5,9,13,14,6,11,15,7,4,10,1,12,2,8,5,5,5,5,5,5,5,5,9,13,14,3,6,11,15,7,4,10,4,3,14,14,3,3,2,1,12,2,8,5,9,13,14,3,6,11,15,7,4,10,10,10,10,2,14,3,15,2,11,15,3,3,3,3,2,8,11,15,4,10,0,5,0,12,4,2,8,3,11,15,4,10,2,5,1,12,2,8,5,9,13,14,3,6,11,15,7,4,10,1,12,2,8,5,9,13,14,3,6,11,15,7,4,10,1,12,2,8,5,9,13,14,3,6,11,15,7,4,10,3,1,12,2,8,5,9,13,14,3,6,11,15,7,4,10,1,16,17,18,19,20,21,22,23,24,25,26,21,24,22,27,23,27,26,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,45,49,46,50,47,50,48,0,0,0,0,0,0,0,0,0,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],null,null,null,null,null,[[["hashmap",3,[["nodeid",3],["vec",3,[["blockid",3]]]]]]],[[["nodeid",3]]],[[["vec",3,[["ipaddr",4]]]]],null,[[["nodeid",3],["blockid",3]]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["connectionid",3]],[[],["connectionclosurereason",4]],[[],["networkcommandsender",3]],[[],["peer",3]],[[],["peers",3]],[[],["bootstrappeers",3]],[[],["peerinfo",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["connectionid",3]],["ordering",4]],[[["socketaddr",4]]],[[],["connectionid",3]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[]],[[["connectionid",3]],["bool",15]],[[["connectionclosurereason",4]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[["massahasherror",4]]],[[["joinerror",3]]],[[["recverror",3]]],[[["error",3]]],[[["error",3]]],[[["modelserror",4]]],[[["timeerror",4]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4,[["modelserror",4]]]],[[]],[[["massatime",3]]],[[["socketaddr",4]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,[[["connectionid",3]],["bool",15]],[[]],[[["vec",3,[["u8",15]]]]],null,[[["connectionid",3]],["option",4,[["ordering",4]]]],null,null,[[["nodeid",3],["block",3]]],[[["nodeid",3],["blockheader",3]]],[[["nodeid",3],["vec",3,[["endorsement",3]]]]],[[["nodeid",3],["vec",3,[["operation",3]]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],null,[[],["option",4,[["error",8]]]],[[["networksettings",3],["establisher",6],["i64",15],["option",4,[["bootstrappeers",3]]],["version",3]]],[[["networkeventreceiver",3]]],[[],["result",4,[["vec",3,[["u8",15]]],["modelserror",4]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[["vec",3,[["ipaddr",4]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[],["networksettings",3]],[[]],null,[[],["result",4]],[[["formatter",3]],["result",6]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null],"p":[[3,"NetworkEventReceiver"],[3,"ConnectionId"],[3,"NetworkCommandSender"],[3,"BootstrapPeers"],[4,"NetworkError"],[4,"NetworkCommand"],[4,"NetworkEvent"],[4,"ConnectionClosureReason"],[3,"DefaultListener"],[3,"PeerInfo"],[3,"Peer"],[3,"NetworkManager"],[3,"DefaultConnector"],[3,"DefaultEstablisher"],[3,"Peers"],[13,"GetPeers"],[13,"GetBootstrapPeers"],[13,"Ban"],[13,"BanIp"],[13,"Unban"],[13,"SendBlock"],[13,"BlockNotFound"],[13,"SendEndorsements"],[13,"SendBlockHeader"],[13,"AskForBlocks"],[13,"NodeSignMessage"],[13,"SendOperations"],[13,"GetStats"],[13,"GeneralProtocolError"],[13,"ChannelError"],[13,"TokioTaskJoinError"],[13,"TokieRecvError"],[13,"PeerConnectionError"],[13,"InvalidIpError"],[13,"ActiveConnectionMissing"],[13,"IOError"],[13,"SerdeError"],[13,"MassaHashError"],[13,"HandshakeError"],[13,"TimeError"],[13,"ModelsError"],[13,"ContainerInconsistencyError"],[13,"NewConnection"],[13,"ConnectionClosed"],[13,"ReceivedBlock"],[13,"BlockNotFound"],[13,"ReceivedEndorsements"],[13,"ReceivedBlockHeader"],[13,"AskedForBlocks"],[13,"ReceivedOperations"],[3,"NetworkSettings"]]},\
"massa_node":{"doc":"Massa: The Decentralized and Scaled Blockchain","t":[5,5,0,5,3,3,3,3,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["launch","main","settings","stop","LoggingSettings","SETTINGS","Settings","VERSION","__private_field","__private_field","api","bootstrap","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","consensus","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","drop","drop","drop","drop","fmt","fmt","from","from","from","from","init","init","init","init","into","into","into","into","level","logging","network","pool","protocol","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip"],"q":["massa_node","","","","massa_node::settings","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,1,2,3,3,1,2,4,3,1,2,4,3,4,3,4,3,3,1,1,2,2,4,3,1,2,4,3,4,3,1,2,4,3,4,3,1,2,4,3,1,2,4,3,1,2,4,3,4,3,3,3,3,4,3,1,2,4,3,1,2,4,3,1,2,4,3,1,2,4,3],"f":[[[]],[[]],null,[[["option",4,[["bootstrapmanager",3]]],["consensusmanager",3],["consensuseventreceiver",3],["poolmanager",3],["protocolmanager",3],["networkmanager",3],["stophandle",3],["stophandle",3]]],null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["loggingsettings",3]],[[],["settings",3]],[[]],[[]],null,[[],["version",3]],[[["usize",15]]],[[],["settings",3]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[],["result",4]],[[],["result",4]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[]],[[]],null,null,null,null,null,[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]]],"p":[[3,"VERSION"],[3,"SETTINGS"],[3,"Settings"],[3,"LoggingSettings"]]},\
"massa_pool":{"doc":"","t":[12,13,13,13,13,13,13,13,13,13,13,13,13,13,13,4,3,4,3,3,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12],"n":["0","AddEndorsements","AddOperations","ChannelError","ContainerInconsistency","FinalOperations","GetEndorsements","GetEndorsementsByAddress","GetEndorsementsById","GetOperationBatch","GetOperations","GetRecentOperations","GetStats","JoinError","ModelsError","PoolCommand","PoolCommandSender","PoolError","PoolManager","PoolSettings","ProtocolError","UpdateCurrentSlot","UpdateLatestFinalPeriods","add_endorsements","add_operations","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","deserialize","final_operations","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","get_endorsements","get_endorsements_by_address","get_endorsements_by_id","get_operation_batch","get_operations","get_operations_involving_address","get_pool_stats","into","into","into","into","into","max_endorsement_count","max_item_return_count","max_operation_future_validity_start_periods","max_pool_size_per_thread","serialize","source","start_pool_controller","stop","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","update_current_slot","update_latest_final_periods","vzip","vzip","vzip","vzip","vzip","0","0","0","0","0","0","address","address","batch_size","creators","endorsements","exclude","max_size","operation_ids","parent","response_tx","response_tx","response_tx","response_tx","response_tx","response_tx","target_slot","target_slot","0","0","0","0","0"],"q":["massa_pool","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","massa_pool::PoolCommand","","","","","","","","","","","","","","","","","","","","","","","massa_pool::PoolError","","","",""],"d":["","","","channel error : {0}","there was an inconsistency between containers","","","","","","","","","Join error {0}","models error: {0}","Commands that can be processed by pool.","","","","Pool configuration","Protocol error {0}","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns a batch of operations ordered from highest to …","","","","","","","","","max endorsement we keep in pool","","how many periods in the future can an op validity start ? …","max pool size per thread (in number of operations)","","","Creates a new pool controller.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[1,2,2,3,3,2,2,2,2,2,2,2,2,3,3,0,0,0,0,0,3,2,2,1,1,4,3,1,2,5,4,3,1,2,5,1,5,1,5,5,1,3,3,2,5,4,3,3,3,3,3,1,2,5,1,1,1,1,1,1,1,4,3,1,2,5,5,5,5,5,5,3,0,4,1,5,3,4,3,1,2,5,4,3,1,2,5,4,3,1,2,5,1,1,4,3,1,2,5,6,7,8,9,10,11,12,13,14,15,16,14,14,17,15,14,17,12,15,13,16,14,15,18,19,20,21,22],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["endorsementhashmap",6,[["endorsement",3]]]]],[[["operationhashmap",6,[["operation",3]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["poolcommandsender",3]],[[],["poolsettings",3]],[[]],[[]],[[],["result",4]],[[["operationhashmap",6]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[["box",3,[["protocolerror",4]]]]],[[["protocolerror",4]]],[[]],[[["joinerror",3]]],[[["modelserror",4]]],[[]],[[]],[[]],[[["slot",3],["blockid",3],["vec",3,[["address",3]]]]],[[["address",3]]],[[["endorsementhashset",6]]],[[["slot",3],["operationhashset",6],["usize",15],["u64",15]]],[[["operationhashset",6]]],[[["address",3]]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,[[],["result",4]],[[],["option",4,[["error",8]]]],[[["poolsettings",3],["u8",15],["u64",15],["protocolcommandsender",3],["protocolpooleventreceiver",3]]],[[]],[[]],[[]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[["slot",3]]],[[["vec",3,[["u64",15]]]]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"p":[[3,"PoolCommandSender"],[4,"PoolCommand"],[4,"PoolError"],[3,"PoolManager"],[3,"PoolSettings"],[13,"AddOperations"],[13,"UpdateCurrentSlot"],[13,"UpdateLatestFinalPeriods"],[13,"FinalOperations"],[13,"AddEndorsements"],[13,"GetStats"],[13,"GetRecentOperations"],[13,"GetEndorsementsByAddress"],[13,"GetOperationBatch"],[13,"GetEndorsements"],[13,"GetEndorsementsById"],[13,"GetOperations"],[13,"ContainerInconsistency"],[13,"ProtocolError"],[13,"ChannelError"],[13,"JoinError"],[13,"ModelsError"]]},\
"massa_protocol_exports":{"doc":"","t":[12,12,12,13,13,17,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,4,3,4,4,3,4,3,4,3,3,13,13,13,13,13,13,13,13,13,13,13,13,13,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,0,0,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,5,5,5,5,11,11,11,11,11,11,5,5,5,5,5,5,5,5,11,11,11,11,12,11,11,12,5,11,11,11,11,11,11,11,11,11,5,5],"n":["0","0","0","ActiveConnectionMissing","AttackBlockDetected","CHANNEL_SIZE","ChannelError","ContainerInconsistencyError","GeneralProtocolError","GetBlocks","GetBlocksResults","HandshakeError","IOError","IntegratedBlock","InvalidIpError","MassaHashError","MissingPeersError","ModelsError","NetworkError","PeerConnectionError","PropagateEndorsements","PropagateOperations","ProtocolCommand","ProtocolCommandSender","ProtocolError","ProtocolEvent","ProtocolEventReceiver","ProtocolManagementCommand","ProtocolManager","ProtocolPoolEvent","ProtocolPoolEventReceiver","ProtocolSettings","ReceivedBlock","ReceivedBlockHeader","ReceivedEndorsements","ReceivedOperations","SerdeError","TimeError","TokieRecvError","TokioSendError","TokioTaskJoinError","UnexpectedNodeCommandChannelClosure","UnexpectedWriterClosure","WishlistDelta","WrongSignature","ask_block_timeout","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","deserialize","drain","drain","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","integrated_block","into","into","into","into","into","into","into","into","into","into","max_known_endorsements_size","max_known_ops_size","max_node_known_blocks_size","max_node_wanted_blocks_size","max_send_wait","max_simultaneous_ask_blocks_per_node","new","notify_block_attack","propagate_endorsements","propagate_operations","send_get_blocks_results","send_wishlist_delta","serialize","serialize","serialize","serialize","source","stop","tests","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","wait_event","wait_event","0","0","0","0","block","block_id","endorsement_ids","new","operation_ids","remove","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","block","block_id","block_id","endorsement_ids","header","operation_set","endorsements","operations","propagate","propagate","mock_network_controller","tools","MockNetworkController","borrow","borrow_mut","close_connection","from","into","new","new_connection","send_ask_for_block","send_block","send_block_not_found","send_endorsements","send_header","send_operations","try_from","try_into","type_id","vzip","wait_command","NodeInfo","PROTOCOL_SETTINGS","asked_list","assert_banned_node","assert_banned_nodes","assert_hash_asked_to_node","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","create_and_connect_nodes","create_block","create_block_with_endorsements","create_block_with_operations","create_endorsement","create_node","create_operation_with_expire_period","create_protocol_settings","deref","fmt","from","from","id","into","into","private_key","send_and_propagate_block","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","wait_protocol_event","wait_protocol_pool_event"],"q":["massa_protocol_exports","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","massa_protocol_exports::ProtocolCommand","","","","","","","","","","massa_protocol_exports::ProtocolError","","","","","","","","","","","","","","","","massa_protocol_exports::ProtocolEvent","","","","","","","massa_protocol_exports::ProtocolPoolEvent","","","","massa_protocol_exports::tests","","massa_protocol_exports::tests::mock_network_controller","","","","","","","","","","","","","","","","","","","massa_protocol_exports::tests::tools","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","Active connection missing:<code>{0}</code>","A block, or it’s header, amounted to an attempted attack.","","An error occurred during channel communication: {0}","container inconsistency error: {0}","Protocol err:{0}","Ask for a list of blocks from consensus.","The response to a ProtocolEvent::GetBlocks.","handshake error:{0:?}","IO error : {0}","Notify block integration of a given block.","The ip:<code>{0}</code> address is not valid","massa_hash error {0}","missing peers","models error: {0}","network error: {0}","Error during network connection:<code>{0:?}</code>","Propagate endorsements","Propagate operations","Commands that protocol worker can process","","","Possible types of events that can happen.","","","","Possible types of pool events that can happen.","","Protocol Configuration","A block with a valid signature has been received.","A block header with a valid signature has been received.","Endorsements were received","Operations were received","Serde error : {0}","Time error {0}","error receiving oneshot response : {0}","error sending protocol event: {0}","A tokio task has crashed err:{0}","the network controller should not drop a node command …","the writer of a node should not drop its event sender …","Wishlist delta","wrong signature","","","","","","","","","","","","","","","","","","","","","","","","","","","drains remaining events and returns them in a VecDeque …","drains remaining events and returns them in a VecDeque …","","","","","","","","","","","","","","","","","","","","","","","","","","","Sends the order to propagate the header of a block","","","","","","","","","","","","","","","Max wait time for sending a Network or Node event.","","","Notify to protocol an attack attempt.","","","Send the response to a ProtocolEvent::GetBlocks.","","","","","","","Stop the protocol controller","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Receives the next ProtocolEvent from connected Node. None …","Receives the next ProtocolPoolEvent None is returned when …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a block for use in protocol, without paying …","","","Creates an endorsement for use in protocol tests, without …","","","","","","","","","","","","","","","","","","","","","","",""],"i":[1,2,3,4,5,0,4,4,4,6,5,4,4,5,4,4,4,4,4,4,5,5,0,0,0,0,0,0,0,0,0,0,6,6,7,7,4,4,4,4,4,4,4,5,4,8,1,2,9,4,6,7,5,10,3,8,1,2,9,4,6,7,5,10,3,8,3,8,3,8,8,1,2,4,4,6,7,5,10,8,1,2,9,4,4,4,4,4,4,4,4,4,4,6,7,5,10,3,8,3,1,2,9,4,6,7,5,10,3,8,8,8,8,8,8,8,9,3,3,3,3,3,6,7,5,10,4,9,0,3,8,4,1,2,9,4,6,7,5,10,3,8,1,2,9,4,6,7,5,10,3,8,1,2,9,4,6,7,5,10,3,8,1,2,9,4,6,7,5,10,3,8,1,2,11,12,13,14,15,15,15,16,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,34,35,34,35,34,36,37,37,36,0,0,0,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,0,0,0,0,0,0,39,40,39,40,39,39,0,0,0,0,0,0,0,0,40,39,39,40,39,39,40,39,0,39,39,40,39,40,39,40,39,40,0,0],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["protocolcommandsender",3]],[[],["protocolsettings",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[["timeerror",4]]],[[["recverror",3]]],[[["modelserror",4]]],[[]],[[["massahasherror",4]]],[[["joinerror",3]]],[[["error",3]]],[[["error",3]]],[[["senderror",3,[["protocolevent",4]]]]],[[["networkerror",4]]],[[]],[[]],[[]],[[]],[[]],[[]],[[["blockid",3],["block",3],["operationhashset",6],["vec",3,[["endorsementid",3]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,[[["joinhandle",3,[["result",4,[["networkeventreceiver",3],["protocolerror",4]]]]],["sender",3,[["protocolmanagementcommand",4]]]]],[[["blockid",3]]],[[["endorsementhashmap",6,[["endorsement",3]]]]],[[["operationhashmap",6,[["operation",3]]]]],[[["blockhashmap",6,[["option",4]]]]],[[["blockhashset",6],["blockhashset",6]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["option",4,[["error",8]]]],[[["protocoleventreceiver",3],["protocolpooleventreceiver",3]]],null,[[]],[[]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[["nodeid",3]]],[[]],[[]],[[]],[[["nodeid",3]]],[[["nodeid",3],["vec",3,[["blockid",3]]]]],[[["nodeid",3],["block",3]]],[[["nodeid",3],["blockid",3]]],[[["nodeid",3],["vec",3,[["endorsement",3]]]]],[[["nodeid",3],["blockheader",3]]],[[["nodeid",3],["vec",3,[["operation",3]]]]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["massatime",3]]],null,null,[[["mocknetworkcontroller",3]]],[[["nodeid",3],["mocknetworkcontroller",3]]],[[["vec",3,[["nodeid",3]]],["mocknetworkcontroller",3]]],[[["blockid",3],["nodeid",3],["mocknetworkcontroller",3]]],[[]],[[]],[[]],[[]],[[],["nodeinfo",3]],[[]],[[["usize",15],["mocknetworkcontroller",3]]],[[["privatekey",3],["publickey",3]],["block",3]],[[["privatekey",3],["publickey",3],["slot",3],["vec",3,[["endorsement",3]]]],["block",3]],[[["privatekey",3],["publickey",3],["slot",3],["vec",3,[["operation",3]]]],["block",3]],[[],["endorsement",3]],[[],["nodeinfo",3]],[[["privatekey",3],["u64",15]],["operation",3]],[[],["protocolsettings",3]],[[],["protocolsettings",3]],[[["formatter",3]],["result",6]],[[]],[[]],null,[[]],[[]],null,[[["mocknetworkcontroller",3],["block",3],["bool",15],["nodeid",3],["protocoleventreceiver",3]]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[["protocoleventreceiver",3],["massatime",3]]],[[["protocolpooleventreceiver",3],["massatime",3]]]],"p":[[3,"ProtocolEventReceiver"],[3,"ProtocolPoolEventReceiver"],[3,"ProtocolCommandSender"],[4,"ProtocolError"],[4,"ProtocolCommand"],[4,"ProtocolEvent"],[4,"ProtocolPoolEvent"],[3,"ProtocolSettings"],[3,"ProtocolManager"],[4,"ProtocolManagementCommand"],[13,"AttackBlockDetected"],[13,"GetBlocksResults"],[13,"PropagateOperations"],[13,"PropagateEndorsements"],[13,"IntegratedBlock"],[13,"WishlistDelta"],[13,"GeneralProtocolError"],[13,"ChannelError"],[13,"TokioTaskJoinError"],[13,"TokieRecvError"],[13,"TokioSendError"],[13,"PeerConnectionError"],[13,"InvalidIpError"],[13,"ActiveConnectionMissing"],[13,"IOError"],[13,"SerdeError"],[13,"MassaHashError"],[13,"HandshakeError"],[13,"TimeError"],[13,"ModelsError"],[13,"NetworkError"],[13,"ContainerInconsistencyError"],[13,"GetBlocks"],[13,"ReceivedBlock"],[13,"ReceivedBlockHeader"],[13,"ReceivedEndorsements"],[13,"ReceivedOperations"],[3,"MockNetworkController"],[3,"NodeInfo"],[3,"PROTOCOL_SETTINGS"]]},\
"massa_protocol_worker":{"doc":"Concurrency","t":[5],"n":["start_protocol_controller"],"q":["massa_protocol_worker"],"d":["start a new ProtocolController from a ProtocolConfig"],"i":[0],"f":[[[["protocolsettings",3],["u64",15],["networkcommandsender",3],["networkeventreceiver",3]]]],"p":[]},\
"massa_signature":{"doc":"","t":[0,17,17,3,3,17,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11],"n":["signature_impl","PRIVATE_KEY_SIZE_BYTES","PUBLIC_KEY_SIZE_BYTES","PrivateKey","PublicKey","SIGNATURE_SIZE_BYTES","Signature","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","cmp","cmp","derive_public_key","deserialize","deserialize","deserialize","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from_bs58_check","from_bs58_check","from_bs58_check","from_bytes","from_bytes","from_bytes","from_str","from_str","from_str","generate_random_private_key","hash","into","into","into","into_bytes","into_bytes","into_bytes","ne","ne","ne","partial_cmp","partial_cmp","serialize","serialize","serialize","sign","to_bs58_check","to_bs58_check","to_bs58_check","to_bytes","to_bytes","to_bytes","to_owned","to_owned","to_owned","to_string","to_string","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","verify_signature","vzip","vzip","vzip"],"q":["massa_signature","massa_signature::signature_impl","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","Private Key used to sign messages Generated using …","Public key used to check if a message was encoded by the …","","Signature generated from a message and a privateKey.","","","","","","","","","","","","","","","","::serde::Deserialize trait for PrivateKey if the …","::serde::Deserialize trait for PublicKey if the …","::serde::Deserialize trait for Signature if the …","","","","","","","","","","","","","Deserialize a PrivateKey using bs58 encoding with checksum.","Deserialize a PublicKey using bs58 encoding with checksum.","Deserialize a Signature using bs58 encoding with checksum.","Deserialize a PrivateKey from bytes.","Deserialize a PublicKey from bytes.","Deserialize a Signature from bytes.","","","","Generate a random private key from a RNG.","","","","","Serialize a PrivateKey into bytes.","Serialize into bytes.","Serialize a Signature into bytes.","","","","","","::serde::Serialize trait for PrivateKey if the serializer …","::serde::Serialize trait for PublicKey if the serializer …","::serde::Serialize trait for Signature if the serializer …","","Serialize a PrivateKey using bs58 encoding with checksum.","Serialize a PublicKey using bs58 encoding with checksum.","Serialize a Signature using bs58 encoding with checksum.","Serialize a PrivateKey as bytes.","Serialize a PublicKey as bytes.","Serialize a Signature as bytes.","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,1,2,3,1,2,3,1,2,3,1,2,3,1,2,0,1,2,3,1,2,3,1,1,2,2,3,3,1,2,3,1,2,3,1,2,3,1,2,3,0,2,1,2,3,1,2,3,1,2,3,1,2,1,2,3,0,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,0,1,2,3],"f":[null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[],["privatekey",3]],[[],["publickey",3]],[[],["signature",3]],[[]],[[]],[[]],[[["privatekey",3]],["ordering",4]],[[["publickey",3]],["ordering",4]],[[["privatekey",3]],["publickey",3]],[[["deserializer",8]],["result",4,[["privatekey",3]]]],[[["deserializer",8]],["result",4,[["publickey",3]]]],[[["deserializer",8]],["result",4,[["signature",3]]]],[[["privatekey",3]],["bool",15]],[[["publickey",3]],["bool",15]],[[["signature",3]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[["str",15]],["result",4,[["privatekey",3],["massahasherror",4]]]],[[["str",15]],["result",4,[["publickey",3],["massahasherror",4]]]],[[["str",15]],["result",4,[["signature",3],["massahasherror",4]]]],[[],["result",4,[["privatekey",3],["massahasherror",4]]]],[[],["result",4,[["publickey",3],["massahasherror",4]]]],[[],["result",4,[["signature",3],["massahasherror",4]]]],[[["str",15]],["result",4]],[[["str",15]],["result",4]],[[["str",15]],["result",4]],[[],["privatekey",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["privatekey",3]],["bool",15]],[[["publickey",3]],["bool",15]],[[["signature",3]],["bool",15]],[[["privatekey",3]],["option",4,[["ordering",4]]]],[[["publickey",3]],["option",4,[["ordering",4]]]],[[["serializer",8]],["result",4]],[[["serializer",8]],["result",4]],[[["serializer",8]],["result",4]],[[["hash",3],["privatekey",3]],["result",4,[["signature",3],["massahasherror",4]]]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[["hash",3],["signature",3],["publickey",3]],["result",4,[["massahasherror",4]]]],[[]],[[]],[[]]],"p":[[3,"PrivateKey"],[3,"PublicKey"],[3,"Signature"]]},\
"massa_time":{"doc":"","t":[13,13,18,3,4,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12],"n":["CheckedOperationError","ConversionError","EPSILON","MassaTime","TimeError","TimeOverflowError","borrow","borrow","borrow_mut","borrow_mut","checked_add","checked_div_time","checked_div_u64","checked_mul","checked_rem_time","checked_rem_u64","checked_sub","clone","clone_into","cmp","compensated_now","days_hours_mins_secs","deserialize","eq","estimate_instant","fmt","fmt","fmt","fmt","from","from","from","from_str","hash","into","into","ne","now","partial_cmp","saturating_add","saturating_sub","serialize","to_duration","to_millis","to_owned","to_string","to_string","to_utc_string","try_from","try_from","try_from","try_into","try_into","type_id","type_id","0"],"q":["massa_time","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","massa_time::TimeError"],"d":["Checked operation error : {0}","Error converting","Smallest time interval","Time structure used every where. Millis since 01/01/1970.","","Time overflow error","","","","","","","","","","","","","","","Gets current compensated unix timestamp (resolution: …","","","","","","","","","","Conversion from u64, representing timestamp in millis.","","Conversion from <code>&amp;str</code>.","","","","","Gets current unix timestamp (resolution: milliseconds).","","","","","Conversion to <code>std::time::Duration</code>.","Conversion to u64, representing millis.","","","","","","Conversion from <code>std::time::Duration</code>.","","","","","",""],"i":[1,1,2,0,0,1,1,2,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,1,2,2,1,2,2,2,2,1,2,2,2,2,2,2,2,2,2,2,1,2,2,1,2,2,1,2,1,2,3],"f":[null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[["massatime",3]],["result",4,[["timeerror",4]]]],[[["massatime",3]],["result",4,[["u64",15],["timeerror",4]]]],[[["u64",15]],["result",4,[["massatime",3],["timeerror",4]]]],[[["u64",15]],["result",4,[["timeerror",4]]]],[[["massatime",3]],["result",4,[["timeerror",4]]]],[[["u64",15]],["result",4,[["timeerror",4]]]],[[["massatime",3]],["result",4,[["timeerror",4]]]],[[],["massatime",3]],[[]],[[["massatime",3]],["ordering",4]],[[["i64",15]],["result",4,[["timeerror",4]]]],[[],["result",4,[["timeerror",4]]]],[[],["result",4]],[[["massatime",3]],["bool",15]],[[["i64",15]],["result",4,[["instant",3],["timeerror",4]]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[["u64",15]]],[[]],[[["str",15]],["result",4]],[[]],[[]],[[]],[[["massatime",3]],["bool",15]],[[],["result",4,[["timeerror",4]]]],[[["massatime",3]],["option",4,[["ordering",4]]]],[[["massatime",3]]],[[["massatime",3]]],[[],["result",4]],[[],["duration",3]],[[],["u64",15]],[[]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["result",4]],[[["duration",3]],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],null],"p":[[4,"TimeError"],[3,"MassaTime"],[13,"CheckedOperationError"]]},\
"massa_wallet":{"doc":"Creating a Massa wallet","t":[3,13,13,13,13,13,13,3,4,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,12,12,11,12,12,11,12,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12],"n":["ConsensusConfigData","IOError","JSONError","MassaHashError","MissingKeyError","ModelsError","SerdeqsError","Wallet","WalletError","add_private_key","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","create_operation","delta_f0","deserialize","deserialize","find_associated_private_key","find_associated_public_key","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","genesis_timestamp","get_full_wallet","get_wallet_address_list","into","into","into","keys","max_block_size","new","operation_validity_periods","periods_per_cycle","remove_address","roll_price","serialize","sign_message","source","t0","thread_count","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","wallet_path","0","0","0","0","0","0"],"q":["massa_wallet","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","massa_wallet::WalletError","","","","",""],"d":["","IO error: {0}","JSON error: {0}","MassaHash error: {0}","Missing key error: {0}","Models error: {0}","Serde Sq error: {0}","Contains the private keys created in the wallet.","","Adds a new private key to wallet, if it was missing","","","","","","","","","","","","","","","Finds the private key associated with given address","Finds the public key associated with given address","","","","","","","","","","","","","","","Export keys to json string","","","","","","","Generates a new wallet initialized with the provided json …","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,1,1,1,1,1,1,0,0,2,1,2,3,1,2,3,2,3,2,3,2,3,2,3,2,2,1,1,2,2,3,1,1,1,1,1,1,2,3,3,2,2,1,2,3,2,3,2,3,3,2,3,2,2,1,3,3,2,3,1,2,1,2,3,1,2,3,1,2,3,2,4,5,6,7,8,9],"f":[null,null,null,null,null,null,null,null,null,[[["privatekey",3]],["result",4,[["address",3],["walleterror",4]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["wallet",3]],[[],["consensusconfigdata",3]],[[]],[[]],[[["operationcontent",3],["address",3]],["result",4,[["operation",3],["walleterror",4]]]],null,[[],["result",4]],[[],["result",4]],[[["address",3]],["option",4,[["privatekey",3]]]],[[["address",3]],["option",4,[["publickey",3]]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[["massahasherror",4]]],[[["error",3]]],[[["error",3]]],[[["error",4]]],[[["modelserror",4]]],[[]],[[]],null,[[],["addresshashmap",6]],[[],["addresshashset",6]],[[]],[[]],[[]],null,null,[[["pathbuf",3]],["result",4,[["wallet",3],["walleterror",4]]]],null,null,[[["address",3]],["option",4]],null,[[],["result",4]],[[["address",3],["vec",3,[["u8",15]]]],["option",4,[["pubkeysig",3]]]],[[],["option",4,[["error",8]]]],null,null,[[]],[[]],[[],["string",3]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null],"p":[[4,"WalletError"],[3,"Wallet"],[3,"ConsensusConfigData"],[13,"IOError"],[13,"JSONError"],[13,"SerdeqsError"],[13,"ModelsError"],[13,"MassaHashError"],[13,"MissingKeyError"]]}\
}');
if (window.initSearch) {window.initSearch(searchIndex)};